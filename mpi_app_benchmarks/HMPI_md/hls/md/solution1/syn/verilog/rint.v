// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rint (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        ap_return
);

parameter    ap_ST_fsm_state1 = 88'b1;
parameter    ap_ST_fsm_state2 = 88'b10;
parameter    ap_ST_fsm_state3 = 88'b100;
parameter    ap_ST_fsm_state4 = 88'b1000;
parameter    ap_ST_fsm_state5 = 88'b10000;
parameter    ap_ST_fsm_state6 = 88'b100000;
parameter    ap_ST_fsm_state7 = 88'b1000000;
parameter    ap_ST_fsm_state8 = 88'b10000000;
parameter    ap_ST_fsm_state9 = 88'b100000000;
parameter    ap_ST_fsm_state10 = 88'b1000000000;
parameter    ap_ST_fsm_state11 = 88'b10000000000;
parameter    ap_ST_fsm_state12 = 88'b100000000000;
parameter    ap_ST_fsm_state13 = 88'b1000000000000;
parameter    ap_ST_fsm_state14 = 88'b10000000000000;
parameter    ap_ST_fsm_state15 = 88'b100000000000000;
parameter    ap_ST_fsm_state16 = 88'b1000000000000000;
parameter    ap_ST_fsm_state17 = 88'b10000000000000000;
parameter    ap_ST_fsm_state18 = 88'b100000000000000000;
parameter    ap_ST_fsm_state19 = 88'b1000000000000000000;
parameter    ap_ST_fsm_state20 = 88'b10000000000000000000;
parameter    ap_ST_fsm_state21 = 88'b100000000000000000000;
parameter    ap_ST_fsm_state22 = 88'b1000000000000000000000;
parameter    ap_ST_fsm_state23 = 88'b10000000000000000000000;
parameter    ap_ST_fsm_state24 = 88'b100000000000000000000000;
parameter    ap_ST_fsm_state25 = 88'b1000000000000000000000000;
parameter    ap_ST_fsm_state26 = 88'b10000000000000000000000000;
parameter    ap_ST_fsm_state27 = 88'b100000000000000000000000000;
parameter    ap_ST_fsm_state28 = 88'b1000000000000000000000000000;
parameter    ap_ST_fsm_state29 = 88'b10000000000000000000000000000;
parameter    ap_ST_fsm_state30 = 88'b100000000000000000000000000000;
parameter    ap_ST_fsm_state31 = 88'b1000000000000000000000000000000;
parameter    ap_ST_fsm_state32 = 88'b10000000000000000000000000000000;
parameter    ap_ST_fsm_state33 = 88'b100000000000000000000000000000000;
parameter    ap_ST_fsm_state34 = 88'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_state35 = 88'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_state36 = 88'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_state37 = 88'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_state38 = 88'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_state39 = 88'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_state40 = 88'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state41 = 88'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state42 = 88'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state43 = 88'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state44 = 88'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state45 = 88'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state46 = 88'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state47 = 88'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state48 = 88'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state49 = 88'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state50 = 88'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state51 = 88'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state52 = 88'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state53 = 88'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state54 = 88'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state55 = 88'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state56 = 88'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state57 = 88'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state58 = 88'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state59 = 88'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state60 = 88'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state61 = 88'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state62 = 88'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state63 = 88'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state64 = 88'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state65 = 88'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state66 = 88'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state67 = 88'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state68 = 88'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state69 = 88'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state70 = 88'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state71 = 88'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state72 = 88'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state73 = 88'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state74 = 88'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state75 = 88'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state76 = 88'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state77 = 88'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state78 = 88'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state79 = 88'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state80 = 88'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state81 = 88'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state82 = 88'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state83 = 88'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state84 = 88'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state85 = 88'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state86 = 88'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state87 = 88'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state88 = 88'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_55 = 32'b1010101;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_56 = 32'b1010110;
parameter    ap_const_lv32_57 = 32'b1010111;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_80000000 = 32'b10000000000000000000000000000000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_BF000000 = 32'b10111111000000000000000000000000;
parameter    ap_const_lv32_3F000000 = 32'b111111000000000000000000000000;
parameter    ap_const_lv64_BFF0000000000000 = 64'b1011111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_3FF0000000000000 = 64'b11111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv64_3FE0000000000000 = 64'b11111111100000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_4000000000000000 = 64'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv11_3FF = 11'b1111111111;
parameter    ap_const_lv11_433 = 11'b10000110011;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv63_0 = 63'b000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv52_FFFFFFFFFFFFF = 52'b1111111111111111111111111111111111111111111111111111;
parameter    ap_const_lv32_BF800000 = 32'b10111111100000000000000000000000;
parameter    ap_const_lv32_C0000000 = 32'b11000000000000000000000000000000;
parameter    ap_const_lv5_5 = 5'b101;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_3 = 5'b11;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] x;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [87:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [5:0] mask_table1_address0;
reg    mask_table1_ce0;
wire   [51:0] mask_table1_q0;
reg   [5:0] mask_table3_address0;
reg    mask_table3_ce0;
wire   [51:0] mask_table3_q0;
wire   [31:0] grp_fu_151_p2;
reg   [31:0] reg_192;
wire   [0:0] ap_CS_fsm_state7;
wire   [0:0] ap_CS_fsm_state51;
wire   [63:0] grp_fu_161_p1;
reg   [63:0] reg_199;
wire   [0:0] ap_CS_fsm_state9;
wire   [0:0] tmp_15_fu_326_p2;
wire   [0:0] ap_CS_fsm_state17;
wire   [0:0] ap_CS_fsm_state53;
wire   [0:0] tmp_20_fu_907_p2;
wire   [0:0] ap_CS_fsm_state61;
wire   [63:0] grp_fu_176_p2;
reg   [63:0] reg_206;
reg   [51:0] reg_211;
wire   [0:0] ap_CS_fsm_state20;
wire   [0:0] ap_CS_fsm_state33;
wire   [31:0] grp_fu_158_p1;
reg   [31:0] reg_215;
wire   [0:0] ap_CS_fsm_state22;
wire   [0:0] ap_CS_fsm_state66;
wire   [63:0] grp_fu_182_p2;
reg   [63:0] reg_221;
wire   [0:0] ap_CS_fsm_state31;
wire   [0:0] ap_CS_fsm_state42;
wire   [0:0] ap_CS_fsm_state75;
wire   [0:0] ap_CS_fsm_state86;
reg   [51:0] reg_226;
wire   [0:0] ap_CS_fsm_state64;
wire   [0:0] ap_CS_fsm_state77;
wire   [0:0] tmp_1_demorgan_fu_260_p2;
reg   [0:0] tmp_1_demorgan_reg_1449;
wire   [0:0] tmp_5_fu_284_p2;
reg   [0:0] tmp_5_reg_1453;
wire   [0:0] tmp_1_fu_170_p2;
reg   [0:0] tmp_1_reg_1457;
wire   [0:0] grp_fu_164_p2;
reg   [0:0] tmp_12_reg_1461;
wire   [0:0] ap_CS_fsm_state8;
wire   [0:0] tmp_2_fu_320_p2;
reg   [0:0] tmp_2_reg_1466;
wire   [0:0] notlhs5_fu_349_p2;
reg   [0:0] notlhs5_reg_1474;
wire   [0:0] ap_CS_fsm_state18;
wire   [0:0] notrhs5_fu_355_p2;
reg   [0:0] notrhs5_reg_1479;
wire   [0:0] grp_fu_188_p2;
reg   [0:0] tmp_27_reg_1484;
wire   [63:0] p_Val2_3_fu_361_p1;
reg   [63:0] p_Val2_3_reg_1489;
wire   [0:0] ap_CS_fsm_state19;
wire   [10:0] loc_V_10_fu_365_p4;
reg   [10:0] loc_V_10_reg_1495;
wire   [51:0] loc_V_11_fu_375_p1;
reg   [51:0] loc_V_11_reg_1503;
wire   [0:0] notrhs4_fu_385_p2;
reg   [0:0] notrhs4_reg_1508;
wire   [0:0] tmp_28_fu_407_p2;
wire   [0:0] tmp_i1_fu_434_p2;
reg   [0:0] tmp_i1_reg_1521;
wire   [0:0] ap_CS_fsm_state21;
wire   [0:0] tmp_i1_19_fu_439_p2;
reg   [0:0] tmp_i1_19_reg_1526;
wire   [63:0] sel_tmp6_i1_fu_581_p3;
reg   [63:0] sel_tmp6_i1_reg_1531;
wire   [0:0] tmp_43_fu_648_p2;
reg   [0:0] tmp_43_reg_1536;
wire   [0:0] ap_CS_fsm_state23;
reg   [0:0] p_Result_42_reg_1540;
wire   [0:0] ap_CS_fsm_state32;
reg   [10:0] loc_V_14_reg_1549;
wire   [51:0] loc_V_15_fu_676_p1;
reg   [51:0] loc_V_15_reg_1557;
wire   [62:0] tmp_54_fu_695_p1;
reg   [62:0] tmp_54_reg_1568;
wire   [63:0] p_i1_fu_863_p3;
reg   [63:0] p_i1_reg_1573;
wire   [0:0] ap_CS_fsm_state34;
reg   [31:0] tmp_13_reg_1578;
wire   [0:0] ap_CS_fsm_state43;
reg   [0:0] tmp_19_reg_1583;
wire   [0:0] ap_CS_fsm_state52;
wire   [0:0] tmp_18_fu_901_p2;
reg   [0:0] tmp_18_reg_1588;
reg   [0:0] tmp_20_reg_1593;
wire   [0:0] notlhs7_fu_930_p2;
reg   [0:0] notlhs7_reg_1597;
wire   [0:0] ap_CS_fsm_state62;
wire   [0:0] notrhs7_fu_936_p2;
reg   [0:0] notrhs7_reg_1602;
reg   [0:0] tmp_35_reg_1607;
wire   [63:0] p_Val2_12_fu_942_p1;
reg   [63:0] p_Val2_12_reg_1612;
wire   [0:0] ap_CS_fsm_state63;
wire   [10:0] loc_V_2_fu_946_p4;
reg   [10:0] loc_V_2_reg_1618;
wire   [51:0] loc_V_3_fu_956_p1;
reg   [51:0] loc_V_3_reg_1626;
wire   [0:0] tmp_36_fu_988_p2;
reg   [0:0] tmp_36_reg_1632;
wire   [0:0] p_Result_25_fu_1008_p3;
reg   [0:0] p_Result_25_reg_1641;
wire   [0:0] ap_CS_fsm_state65;
wire   [0:0] tmp_i4_fu_1015_p2;
reg   [0:0] tmp_i4_reg_1647;
wire   [0:0] tmp_i_fu_1020_p2;
reg   [0:0] tmp_i_reg_1654;
wire   [63:0] p_Result_72_fu_1100_p4;
reg   [63:0] p_Result_72_reg_1660;
wire   [0:0] notlhs_i_fu_1110_p2;
reg   [0:0] notlhs_i_reg_1665;
wire   [0:0] notrhs_i_fu_1115_p2;
reg   [0:0] notrhs_i_reg_1670;
wire   [31:0] r_1_fu_1175_p3;
reg   [31:0] r_1_reg_1675;
wire   [0:0] ap_CS_fsm_state67;
reg   [0:0] tmp_50_reg_1681;
wire   [0:0] tmp_51_fu_1224_p2;
reg   [0:0] tmp_51_reg_1686;
wire   [0:0] ap_CS_fsm_state68;
reg   [0:0] p_Result_59_reg_1690;
wire   [0:0] ap_CS_fsm_state76;
reg   [10:0] loc_V_6_reg_1699;
wire   [51:0] loc_V_7_fu_1251_p1;
reg   [51:0] loc_V_7_reg_1707;
wire   [62:0] tmp_60_fu_1270_p1;
reg   [62:0] tmp_60_reg_1718;
wire   [0:0] tmp_i_18_fu_1274_p2;
reg   [0:0] tmp_i_18_reg_1723;
wire   [0:0] ap_CS_fsm_state78;
wire   [63:0] sel_tmp6_i3_fu_1399_p3;
reg   [63:0] sel_tmp6_i3_reg_1728;
wire   [0:0] notlhs_i1_fu_1407_p2;
reg   [0:0] notlhs_i1_reg_1733;
wire   [0:0] notrhs_i1_fu_1412_p2;
reg   [0:0] notrhs_i1_reg_1738;
wire   [31:0] tmp_14_fu_1431_p3;
reg   [31:0] tmp_14_reg_1743;
wire   [0:0] ap_CS_fsm_state87;
reg   [31:0] p_0_phi_fu_127_p20;
reg   [31:0] p_0_reg_122;
wire   [0:0] ap_CS_fsm_state88;
wire   [0:0] ap_CS_fsm_state44;
wire   [0:0] ap_CS_fsm_state45;
wire   [0:0] ap_CS_fsm_state24;
wire   [63:0] tmp_26_i_fu_422_p1;
wire   [63:0] tmp_26_i1_fu_690_p1;
wire   [63:0] tmp_21_i_fu_1003_p1;
wire   [63:0] tmp_21_i1_fu_1265_p1;
reg   [31:0] grp_fu_151_p1;
reg   [63:0] grp_fu_158_p0;
wire   [63:0] p_i_fu_599_p3;
wire   [63:0] sel_tmp6_i_fu_1152_p3;
reg   [31:0] grp_fu_161_p0;
reg   [31:0] grp_fu_164_p0;
reg   [31:0] grp_fu_164_p1;
reg   [63:0] grp_fu_176_p1;
wire   [0:0] ap_CS_fsm_state10;
wire   [0:0] ap_CS_fsm_state54;
reg   [63:0] grp_fu_182_p0;
reg   [63:0] grp_fu_182_p1;
wire   [0:0] ap_CS_fsm_state35;
wire   [0:0] ap_CS_fsm_state79;
wire   [31:0] p_Val2_s_fu_230_p1;
wire   [7:0] loc_V_fu_234_p4;
wire   [22:0] loc_V_1_fu_244_p1;
wire   [0:0] tmp_i_i_fu_248_p2;
wire   [0:0] tmp_i_i_17_fu_254_p2;
wire   [0:0] notrhs_fu_272_p2;
wire   [0:0] notlhs_fu_266_p2;
wire   [0:0] tmp_3_fu_278_p2;
wire   [31:0] x_assign_to_int_fu_290_p1;
wire   [7:0] tmp_9_fu_294_p4;
wire   [22:0] tmp_11_fu_304_p1;
wire   [0:0] notrhs2_fu_314_p2;
wire   [0:0] notlhs2_fu_308_p2;
wire   [63:0] tmp_8_to_int_fu_331_p1;
wire   [10:0] tmp_22_fu_335_p4;
wire   [51:0] tmp_23_fu_345_p1;
wire   [0:0] notlhs4_fu_379_p2;
wire   [0:0] tmp_24_fu_391_p2;
wire   [0:0] tmp_25_fu_397_p2;
wire   [0:0] tmp_26_fu_401_p2;
wire   [5:0] index_V_fu_412_p4;
wire   [0:0] tmp_25_i_fu_444_p2;
wire   [0:0] p_Result_8_fu_427_p3;
wire   [63:0] p_Result_77_fu_458_p3;
wire   [62:0] tmp_38_fu_470_p1;
wire   [63:0] mask_i45_cast_fu_454_p1;
wire   [63:0] p_Result_78_fu_473_p3;
wire   [63:0] p_Val2_7_fu_481_p2;
wire   [10:0] loc_V_12_fu_495_p4;
wire   [0:0] p_Result_79_fu_487_p3;
wire   [51:0] loc_V_13_fu_505_p1;
wire   [51:0] xs_sig_V_1_fu_522_p3;
wire   [51:0] tmp_28_i_fu_529_p2;
wire   [0:0] xs_sign_V_15_fu_516_p2;
wire   [10:0] xs_exp_V_12_fu_509_p3;
wire   [51:0] xs_sig_V_16_fu_535_p2;
wire   [63:0] p_Result_80_fu_541_p4;
wire   [0:0] or_cond_i_fu_449_p2;
wire   [0:0] sel_tmp_i_fu_555_p2;
wire   [0:0] sel_tmp1_i_fu_561_p2;
wire   [63:0] ret_i_i_i_i_fu_466_p1;
wire   [0:0] sel_tmp5_demorgan_i_fu_575_p2;
wire   [63:0] sel_tmp2_i_fu_567_p3;
wire   [63:0] ret_i_i_i_fu_551_p1;
wire   [0:0] sel_tmp7_i_fu_589_p2;
wire   [0:0] sel_tmp8_i1_fu_594_p2;
wire   [31:0] r_to_int_fu_607_p1;
wire   [7:0] tmp_37_fu_611_p4;
wire   [22:0] tmp_41_fu_621_p1;
wire   [0:0] notrhs8_fu_631_p2;
wire   [0:0] notlhs8_fu_625_p2;
wire   [0:0] tmp_39_fu_637_p2;
wire   [0:0] tmp_40_fu_643_p2;
wire   [63:0] p_Val2_23_fu_654_p1;
wire   [5:0] index_V_2_fu_680_p4;
wire   [0:0] tmp_24_i1_fu_709_p2;
wire   [0:0] tmp_25_i1_fu_714_p2;
wire   [63:0] p_Result_81_fu_729_p3;
wire   [63:0] p_Result_82_fu_740_p3;
wire   [63:0] mask_i65_cast_fu_725_p1;
wire   [63:0] p_Val2_27_fu_747_p2;
wire   [10:0] loc_V_16_fu_761_p4;
wire   [0:0] p_Result_83_fu_753_p3;
wire   [51:0] loc_V_17_fu_771_p1;
wire   [51:0] xs_sig_V_8_fu_786_p3;
wire   [51:0] tmp_28_i1_fu_792_p2;
wire   [0:0] xs_sign_V_fu_781_p2;
wire   [10:0] xs_exp_V_fu_775_p3;
wire   [51:0] xs_sig_V_fu_798_p2;
wire   [63:0] p_Result_84_fu_804_p4;
wire   [0:0] or_cond_i1_fu_719_p2;
wire   [0:0] sel_tmp_i1_fu_818_p2;
wire   [0:0] tmp_i2_fu_699_p2;
wire   [0:0] sel_tmp1_i1_fu_823_p2;
wire   [63:0] ret_i_i_i_i1_fu_736_p1;
wire   [0:0] tmp_i2_20_fu_704_p2;
wire   [0:0] sel_tmp5_demorgan_i1_fu_837_p2;
wire   [63:0] sel_tmp2_i1_fu_829_p3;
wire   [63:0] ret_i_i_i1_fu_814_p1;
wire   [0:0] sel_tmp7_i1_fu_851_p2;
wire   [0:0] sel_tmp8_i2_fu_857_p2;
wire   [63:0] sel_tmp6_i2_fu_843_p3;
wire   [31:0] x_assign_1_to_int_fu_871_p1;
wire   [7:0] tmp_16_fu_875_p4;
wire   [22:0] tmp_17_fu_885_p1;
wire   [0:0] notrhs3_fu_895_p2;
wire   [0:0] notlhs3_fu_889_p2;
wire   [63:0] tmp_10_to_int_fu_912_p1;
wire   [10:0] tmp_30_fu_916_p4;
wire   [51:0] tmp_31_fu_926_p1;
wire   [0:0] notrhs6_fu_966_p2;
wire   [0:0] notlhs6_fu_960_p2;
wire   [0:0] tmp_32_fu_972_p2;
wire   [0:0] tmp_33_fu_978_p2;
wire   [0:0] tmp_34_fu_982_p2;
wire   [5:0] index_V_1_fu_993_p4;
wire   [62:0] tmp_45_fu_1029_p1;
wire   [63:0] mask_i_cast_fu_1025_p1;
wire   [63:0] p_Result_70_fu_1032_p3;
wire   [63:0] p_Val2_17_fu_1040_p2;
wire   [10:0] loc_V_4_fu_1054_p4;
wire   [0:0] p_Result_71_fu_1046_p3;
wire   [51:0] loc_V_5_fu_1064_p1;
wire   [51:0] xs_sig_V_4_fu_1081_p3;
wire   [51:0] tmp_23_i_fu_1088_p2;
wire   [0:0] xs_sign_V_13_fu_1075_p2;
wire   [10:0] xs_exp_V_10_fu_1068_p3;
wire   [51:0] xs_sig_V_14_fu_1094_p2;
wire   [0:0] sel_tmp2_demorgan_i_fu_1127_p2;
wire   [63:0] p_Result_s_fu_1120_p3;
wire   [63:0] sel_tmp3_v_i_fu_1131_p3;
wire   [0:0] sel_tmp4_i_fu_1142_p2;
wire   [0:0] sel_tmp5_i_fu_1147_p2;
wire   [63:0] sel_tmp3_i_fu_1138_p1;
wire   [0:0] sel_tmp8_i_fu_1161_p2;
wire   [0:0] tmp_fu_1165_p2;
wire   [0:0] sel_tmp9_i_fu_1170_p2;
wire   [31:0] r_1_to_int_fu_1184_p1;
wire   [7:0] tmp_46_fu_1187_p4;
wire   [22:0] tmp_48_fu_1197_p1;
wire   [0:0] notrhs1_fu_1207_p2;
wire   [0:0] notlhs1_fu_1201_p2;
wire   [0:0] tmp_47_fu_1213_p2;
wire   [0:0] tmp_49_fu_1219_p2;
wire   [63:0] p_Val2_32_fu_1229_p1;
wire   [5:0] index_V_3_fu_1255_p4;
wire   [63:0] p_Result_74_fu_1295_p3;
wire   [63:0] mask_i14_cast_fu_1291_p1;
wire   [63:0] p_Val2_37_fu_1302_p2;
wire   [10:0] loc_V_8_fu_1316_p4;
wire   [0:0] p_Result_75_fu_1308_p3;
wire   [51:0] loc_V_9_fu_1326_p1;
wire   [51:0] xs_sig_V_12_fu_1341_p3;
wire   [51:0] tmp_23_i1_fu_1347_p2;
wire   [0:0] xs_sign_V_14_fu_1336_p2;
wire   [10:0] xs_exp_V_11_fu_1330_p3;
wire   [51:0] xs_sig_V_15_fu_1353_p2;
wire   [0:0] tmp_i9_fu_1279_p2;
wire   [0:0] sel_tmp2_demorgan_i1_fu_1369_p2;
wire   [63:0] p_Result_73_fu_1284_p3;
wire   [63:0] p_Result_76_fu_1359_p4;
wire   [63:0] sel_tmp3_v_i1_fu_1375_p3;
wire   [0:0] sel_tmp4_i1_fu_1387_p2;
wire   [0:0] sel_tmp5_i1_fu_1393_p2;
wire   [63:0] sel_tmp3_i1_fu_1383_p1;
wire   [0:0] sel_tmp8_i3_fu_1417_p2;
wire   [0:0] tmp1_fu_1421_p2;
wire   [0:0] sel_tmp9_i1_fu_1426_p2;
reg   [4:0] grp_fu_164_opcode;
reg   [31:0] ap_return_preg;
reg   [87:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 88'b1;
#0 ap_return_preg = 32'b00000000000000000000000000000000;
end

rint_mask_table1 #(
    .DataWidth( 52 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mask_table1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table1_address0),
    .ce0(mask_table1_ce0),
    .q0(mask_table1_q0)
);

rint_mask_table1 #(
    .DataWidth( 52 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mask_table3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table3_address0),
    .ce0(mask_table3_ce0),
    .q0(mask_table3_q0)
);

md_fadd_32ns_32nsfYi #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
md_fadd_32ns_32nsfYi_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x),
    .din1(grp_fu_151_p1),
    .ce(1'b1),
    .dout(grp_fu_151_p2)
);

md_fptrunc_64ns_3g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
md_fptrunc_64ns_3g8j_U71(
    .din0(grp_fu_158_p0),
    .dout(grp_fu_158_p1)
);

md_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
md_fpext_32ns_64_1_U72(
    .din0(grp_fu_161_p0),
    .dout(grp_fu_161_p1)
);

md_fcmp_32ns_32nshbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
md_fcmp_32ns_32nshbi_U73(
    .din0(grp_fu_164_p0),
    .din1(grp_fu_164_p1),
    .opcode(grp_fu_164_opcode),
    .dout(grp_fu_164_p2)
);

md_fcmp_32ns_32nshbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
md_fcmp_32ns_32nshbi_U74(
    .din0(x),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_1),
    .dout(tmp_1_fu_170_p2)
);

md_dadd_64ns_64nsibs #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
md_dadd_64ns_64nsibs_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_199),
    .din1(grp_fu_176_p1),
    .ce(1'b1),
    .dout(grp_fu_176_p2)
);

md_dmul_64ns_64nsjbC #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
md_dmul_64ns_64nsjbC_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_182_p0),
    .din1(grp_fu_182_p1),
    .ce(1'b1),
    .dout(grp_fu_182_p2)
);

md_dcmp_64ns_64nskbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
md_dcmp_64ns_64nskbM_U77(
    .din0(reg_199),
    .din1(reg_206),
    .opcode(ap_const_lv5_1),
    .dout(grp_fu_188_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv32_0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state88)) begin
            ap_return_preg <= p_0_phi_fu_127_p20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (1'b0 == tmp_43_reg_1536))) begin
        p_0_reg_122 <= reg_215;
    end else if (((1'b1 == ap_CS_fsm_state9) & ~(tmp_15_fu_326_p2 == 1'b0))) begin
        p_0_reg_122 <= ap_const_lv32_0;
    end else if (((1'b1 == ap_CS_fsm_state68) & (1'b0 == tmp_51_fu_1224_p2))) begin
        p_0_reg_122 <= r_1_reg_1675;
    end else if (((1'b1 == ap_CS_fsm_state53) & ~(1'b0 == tmp_20_fu_907_p2))) begin
        p_0_reg_122 <= ap_const_lv32_80000000;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & ~(1'b0 == tmp_1_demorgan_fu_260_p2)) | ((1'b1 == ap_CS_fsm_state45) & ~(1'b0 == tmp_1_reg_1457)) | ((1'b1 == ap_CS_fsm_state63) & ~(1'b0 == tmp_36_fu_988_p2)) | ((1'b1 == ap_CS_fsm_state19) & ~(1'b0 == tmp_28_fu_407_p2)))) begin
        p_0_reg_122 <= x;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        p_0_reg_122 <= tmp_13_reg_1578;
    end else if (((1'b1 == ap_CS_fsm_state88) & (1'b0 == tmp_1_demorgan_reg_1449) & ~(1'b0 == tmp_5_reg_1453) & (1'b0 == tmp_1_reg_1457) & (1'b0 == tmp_20_reg_1593) & (1'b0 == tmp_36_reg_1632) & ~(1'b0 == tmp_51_reg_1686))) begin
        p_0_reg_122 <= tmp_14_reg_1743;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        loc_V_10_reg_1495 <= {{p_Val2_3_fu_361_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
        loc_V_11_reg_1503 <= loc_V_11_fu_375_p1;
        notrhs4_reg_1508 <= notrhs4_fu_385_p2;
        p_Val2_3_reg_1489 <= p_Val2_3_fu_361_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        loc_V_14_reg_1549 <= {{p_Val2_23_fu_654_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
        loc_V_15_reg_1557 <= loc_V_15_fu_676_p1;
        p_Result_42_reg_1540 <= p_Val2_23_fu_654_p1[ap_const_lv32_3F];
        tmp_54_reg_1568 <= tmp_54_fu_695_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        loc_V_2_reg_1618 <= {{p_Val2_12_fu_942_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
        loc_V_3_reg_1626 <= loc_V_3_fu_956_p1;
        p_Val2_12_reg_1612 <= p_Val2_12_fu_942_p1;
        tmp_36_reg_1632 <= tmp_36_fu_988_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        loc_V_6_reg_1699 <= {{p_Val2_32_fu_1229_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
        loc_V_7_reg_1707 <= loc_V_7_fu_1251_p1;
        p_Result_59_reg_1690 <= p_Val2_32_fu_1229_p1[ap_const_lv32_3F];
        tmp_60_reg_1718 <= tmp_60_fu_1270_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        notlhs5_reg_1474 <= notlhs5_fu_349_p2;
        notrhs5_reg_1479 <= notrhs5_fu_355_p2;
        tmp_27_reg_1484 <= grp_fu_188_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        notlhs7_reg_1597 <= notlhs7_fu_930_p2;
        notrhs7_reg_1602 <= notrhs7_fu_936_p2;
        tmp_35_reg_1607 <= grp_fu_188_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        notlhs_i1_reg_1733 <= notlhs_i1_fu_1407_p2;
        notrhs_i1_reg_1738 <= notrhs_i1_fu_1412_p2;
        sel_tmp6_i3_reg_1728 <= sel_tmp6_i3_fu_1399_p3;
        tmp_i_18_reg_1723 <= tmp_i_18_fu_1274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        notlhs_i_reg_1665 <= notlhs_i_fu_1110_p2;
        notrhs_i_reg_1670 <= notrhs_i_fu_1115_p2;
        p_Result_25_reg_1641 <= p_Val2_12_reg_1612[ap_const_lv32_3F];
        p_Result_72_reg_1660 <= p_Result_72_fu_1100_p4;
        tmp_i4_reg_1647 <= tmp_i4_fu_1015_p2;
        tmp_i_reg_1654 <= tmp_i_fu_1020_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        p_i1_reg_1573 <= p_i1_fu_863_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        r_1_reg_1675 <= r_1_fu_1175_p3;
        tmp_50_reg_1681 <= grp_fu_164_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state51))) begin
        reg_192 <= grp_fu_151_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (tmp_15_fu_326_p2 == 1'b0)) | (1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state53) & (1'b0 == tmp_20_fu_907_p2)) | (1'b1 == ap_CS_fsm_state61))) begin
        reg_199 <= grp_fu_161_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state61))) begin
        reg_206 <= grp_fu_176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state33))) begin
        reg_211 <= mask_table3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state66))) begin
        reg_215 <= grp_fu_158_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state86))) begin
        reg_221 <= grp_fu_182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state77))) begin
        reg_226 <= mask_table1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        sel_tmp6_i1_reg_1531 <= sel_tmp6_i1_fu_581_p3;
        tmp_i1_19_reg_1526 <= tmp_i1_19_fu_439_p2;
        tmp_i1_reg_1521 <= tmp_i1_fu_434_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_12_reg_1461 <= grp_fu_164_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        tmp_13_reg_1578 <= grp_fu_158_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        tmp_14_reg_1743 <= tmp_14_fu_1431_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        tmp_18_reg_1588 <= tmp_18_fu_901_p2;
        tmp_20_reg_1593 <= tmp_20_fu_907_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        tmp_19_reg_1583 <= grp_fu_164_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        tmp_1_demorgan_reg_1449 <= tmp_1_demorgan_fu_260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (1'b0 == tmp_1_demorgan_fu_260_p2) & ~(1'b0 == tmp_5_fu_284_p2))) begin
        tmp_1_reg_1457 <= tmp_1_fu_170_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_2_reg_1466 <= tmp_2_fu_320_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_43_reg_1536 <= tmp_43_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        tmp_51_reg_1686 <= tmp_51_fu_1224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (1'b0 == tmp_1_demorgan_fu_260_p2))) begin
        tmp_5_reg_1453 <= tmp_5_fu_284_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1)) | (1'b1 == ap_CS_fsm_state88))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        ap_return = p_0_phi_fu_127_p20;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_151_p1 = ap_const_lv32_3F000000;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        grp_fu_151_p1 = ap_const_lv32_BF000000;
    end else begin
        grp_fu_151_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_158_p0 = sel_tmp6_i_fu_1152_p3;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state87))) begin
        grp_fu_158_p0 = reg_221;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_158_p0 = p_i_fu_599_p3;
    end else begin
        grp_fu_158_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_161_p0 = reg_192;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state53))) begin
        grp_fu_161_p0 = x;
    end else begin
        grp_fu_161_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_164_opcode = ap_const_lv5_3;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state67))) begin
        grp_fu_164_opcode = ap_const_lv5_1;
    end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0) & (1'b0 == tmp_1_demorgan_fu_260_p2)) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_164_opcode = ap_const_lv5_5;
    end else begin
        grp_fu_164_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_164_p0 = r_1_fu_1175_p3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_164_p0 = reg_215;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state52))) begin
        grp_fu_164_p0 = reg_192;
    end else if ((ap_CS_fsm_state1 == 1'b1)) begin
        grp_fu_164_p0 = x;
    end else begin
        grp_fu_164_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state67))) begin
        grp_fu_164_p1 = reg_192;
    end else if (((ap_CS_fsm_state1 == 1'b1) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state52))) begin
        grp_fu_164_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_164_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_176_p1 = ap_const_lv64_3FF0000000000000;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_176_p1 = ap_const_lv64_BFF0000000000000;
    end else begin
        grp_fu_176_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_182_p0 = sel_tmp6_i3_reg_1728;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_182_p0 = p_i1_reg_1573;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_182_p0 = reg_199;
    end else begin
        grp_fu_182_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state79))) begin
        grp_fu_182_p1 = ap_const_lv64_4000000000000000;
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_182_p1 = ap_const_lv64_3FE0000000000000;
    end else begin
        grp_fu_182_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        mask_table1_address0 = tmp_21_i1_fu_1265_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        mask_table1_address0 = tmp_21_i_fu_1003_p1;
    end else begin
        mask_table1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state76))) begin
        mask_table1_ce0 = 1'b1;
    end else begin
        mask_table1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        mask_table3_address0 = tmp_26_i1_fu_690_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        mask_table3_address0 = tmp_26_i_fu_422_p1;
    end else begin
        mask_table3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state32))) begin
        mask_table3_ce0 = 1'b1;
    end else begin
        mask_table3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state88) & (1'b0 == tmp_1_demorgan_reg_1449) & ~(1'b0 == tmp_5_reg_1453) & (1'b0 == tmp_1_reg_1457) & (1'b0 == tmp_20_reg_1593) & (1'b0 == tmp_36_reg_1632) & ~(1'b0 == tmp_51_reg_1686))) begin
        p_0_phi_fu_127_p20 = tmp_14_reg_1743;
    end else begin
        p_0_phi_fu_127_p20 = p_0_reg_122;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~(ap_start == 1'b0) & (1'b0 == tmp_1_demorgan_fu_260_p2) & ~(1'b0 == tmp_5_fu_284_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else if ((~(ap_start == 1'b0) & (1'b0 == tmp_1_demorgan_fu_260_p2) & (1'b0 == tmp_5_fu_284_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(ap_start == 1'b0) & ~(1'b0 == tmp_1_demorgan_fu_260_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (~(tmp_15_fu_326_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (~(1'b0 == tmp_28_fu_407_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if ((1'b0 == tmp_43_reg_1536)) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state45 : begin
            if (~(1'b0 == tmp_1_reg_1457)) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (~(1'b0 == tmp_20_fu_907_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            if (~(1'b0 == tmp_36_fu_988_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            if ((1'b0 == tmp_51_fu_1224_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_state20 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state21 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_state22 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_state23 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_state24 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_state31 = ap_CS_fsm[ap_const_lv32_1E];

assign ap_CS_fsm_state32 = ap_CS_fsm[ap_const_lv32_1F];

assign ap_CS_fsm_state33 = ap_CS_fsm[ap_const_lv32_20];

assign ap_CS_fsm_state34 = ap_CS_fsm[ap_const_lv32_21];

assign ap_CS_fsm_state35 = ap_CS_fsm[ap_const_lv32_22];

assign ap_CS_fsm_state42 = ap_CS_fsm[ap_const_lv32_29];

assign ap_CS_fsm_state43 = ap_CS_fsm[ap_const_lv32_2A];

assign ap_CS_fsm_state44 = ap_CS_fsm[ap_const_lv32_2B];

assign ap_CS_fsm_state45 = ap_CS_fsm[ap_const_lv32_2C];

assign ap_CS_fsm_state51 = ap_CS_fsm[ap_const_lv32_32];

assign ap_CS_fsm_state52 = ap_CS_fsm[ap_const_lv32_33];

assign ap_CS_fsm_state53 = ap_CS_fsm[ap_const_lv32_34];

assign ap_CS_fsm_state54 = ap_CS_fsm[ap_const_lv32_35];

assign ap_CS_fsm_state61 = ap_CS_fsm[ap_const_lv32_3C];

assign ap_CS_fsm_state62 = ap_CS_fsm[ap_const_lv32_3D];

assign ap_CS_fsm_state63 = ap_CS_fsm[ap_const_lv32_3E];

assign ap_CS_fsm_state64 = ap_CS_fsm[ap_const_lv32_3F];

assign ap_CS_fsm_state65 = ap_CS_fsm[ap_const_lv32_40];

assign ap_CS_fsm_state66 = ap_CS_fsm[ap_const_lv32_41];

assign ap_CS_fsm_state67 = ap_CS_fsm[ap_const_lv32_42];

assign ap_CS_fsm_state68 = ap_CS_fsm[ap_const_lv32_43];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state75 = ap_CS_fsm[ap_const_lv32_4A];

assign ap_CS_fsm_state76 = ap_CS_fsm[ap_const_lv32_4B];

assign ap_CS_fsm_state77 = ap_CS_fsm[ap_const_lv32_4C];

assign ap_CS_fsm_state78 = ap_CS_fsm[ap_const_lv32_4D];

assign ap_CS_fsm_state79 = ap_CS_fsm[ap_const_lv32_4E];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state86 = ap_CS_fsm[ap_const_lv32_55];

assign ap_CS_fsm_state87 = ap_CS_fsm[ap_const_lv32_56];

assign ap_CS_fsm_state88 = ap_CS_fsm[ap_const_lv32_57];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign index_V_1_fu_993_p4 = {{p_Val2_12_fu_942_p1[ap_const_lv32_39 : ap_const_lv32_34]}};

assign index_V_2_fu_680_p4 = {{p_Val2_23_fu_654_p1[ap_const_lv32_39 : ap_const_lv32_34]}};

assign index_V_3_fu_1255_p4 = {{p_Val2_32_fu_1229_p1[ap_const_lv32_39 : ap_const_lv32_34]}};

assign index_V_fu_412_p4 = {{p_Val2_3_fu_361_p1[ap_const_lv32_39 : ap_const_lv32_34]}};

assign loc_V_10_fu_365_p4 = {{p_Val2_3_fu_361_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign loc_V_11_fu_375_p1 = p_Val2_3_fu_361_p1[51:0];

assign loc_V_12_fu_495_p4 = {{p_Val2_7_fu_481_p2[ap_const_lv32_3E : ap_const_lv32_34]}};

assign loc_V_13_fu_505_p1 = p_Val2_7_fu_481_p2[51:0];

assign loc_V_15_fu_676_p1 = p_Val2_23_fu_654_p1[51:0];

assign loc_V_16_fu_761_p4 = {{p_Val2_27_fu_747_p2[ap_const_lv32_3E : ap_const_lv32_34]}};

assign loc_V_17_fu_771_p1 = p_Val2_27_fu_747_p2[51:0];

assign loc_V_1_fu_244_p1 = p_Val2_s_fu_230_p1[22:0];

assign loc_V_2_fu_946_p4 = {{p_Val2_12_fu_942_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign loc_V_3_fu_956_p1 = p_Val2_12_fu_942_p1[51:0];

assign loc_V_4_fu_1054_p4 = {{p_Val2_17_fu_1040_p2[ap_const_lv32_3E : ap_const_lv32_34]}};

assign loc_V_5_fu_1064_p1 = p_Val2_17_fu_1040_p2[51:0];

assign loc_V_7_fu_1251_p1 = p_Val2_32_fu_1229_p1[51:0];

assign loc_V_8_fu_1316_p4 = {{p_Val2_37_fu_1302_p2[ap_const_lv32_3E : ap_const_lv32_34]}};

assign loc_V_9_fu_1326_p1 = p_Val2_37_fu_1302_p2[51:0];

assign loc_V_fu_234_p4 = {{p_Val2_s_fu_230_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign mask_i14_cast_fu_1291_p1 = reg_226;

assign mask_i45_cast_fu_454_p1 = reg_211;

assign mask_i65_cast_fu_725_p1 = reg_211;

assign mask_i_cast_fu_1025_p1 = reg_226;

assign notlhs1_fu_1201_p2 = ((tmp_46_fu_1187_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs2_fu_308_p2 = ((tmp_9_fu_294_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs3_fu_889_p2 = ((tmp_16_fu_875_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs4_fu_379_p2 = ((loc_V_10_fu_365_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs5_fu_349_p2 = ((tmp_22_fu_335_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs6_fu_960_p2 = ((loc_V_2_fu_946_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs7_fu_930_p2 = ((tmp_30_fu_916_p4 != ap_const_lv11_7FF) ? 1'b1 : 1'b0);

assign notlhs8_fu_625_p2 = ((tmp_37_fu_611_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_fu_266_p2 = ((loc_V_fu_234_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notlhs_i1_fu_1407_p2 = ((loc_V_7_reg_1707 != ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notlhs_i_fu_1110_p2 = ((loc_V_3_reg_1626 != ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs1_fu_1207_p2 = ((tmp_48_fu_1197_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs2_fu_314_p2 = ((tmp_11_fu_304_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs3_fu_895_p2 = ((tmp_17_fu_885_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs4_fu_385_p2 = ((loc_V_11_fu_375_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs5_fu_355_p2 = ((tmp_23_fu_345_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs6_fu_966_p2 = ((loc_V_3_fu_956_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs7_fu_936_p2 = ((tmp_31_fu_926_p1 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign notrhs8_fu_631_p2 = ((tmp_41_fu_621_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_fu_272_p2 = ((loc_V_1_fu_244_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign notrhs_i1_fu_1412_p2 = ((loc_V_6_reg_1699 != ap_const_lv11_0) ? 1'b1 : 1'b0);

assign notrhs_i_fu_1115_p2 = ((loc_V_2_reg_1618 != ap_const_lv11_0) ? 1'b1 : 1'b0);

assign or_cond_i1_fu_719_p2 = (tmp_24_i1_fu_709_p2 & tmp_25_i1_fu_714_p2);

assign or_cond_i_fu_449_p2 = (notrhs4_reg_1508 & tmp_25_i_fu_444_p2);

assign p_Result_25_fu_1008_p3 = p_Val2_12_reg_1612[ap_const_lv32_3F];

assign p_Result_70_fu_1032_p3 = {{1'b1}, {tmp_45_fu_1029_p1}};

assign p_Result_71_fu_1046_p3 = p_Val2_17_fu_1040_p2[ap_const_lv32_3F];

assign p_Result_72_fu_1100_p4 = {{{xs_sign_V_13_fu_1075_p2}, {xs_exp_V_10_fu_1068_p3}}, {xs_sig_V_14_fu_1094_p2}};

assign p_Result_73_fu_1284_p3 = {{p_Result_59_reg_1690}, {ap_const_lv63_0}};

assign p_Result_74_fu_1295_p3 = {{1'b1}, {tmp_60_reg_1718}};

assign p_Result_75_fu_1308_p3 = p_Val2_37_fu_1302_p2[ap_const_lv32_3F];

assign p_Result_76_fu_1359_p4 = {{{xs_sign_V_14_fu_1336_p2}, {xs_exp_V_11_fu_1330_p3}}, {xs_sig_V_15_fu_1353_p2}};

assign p_Result_77_fu_458_p3 = {{p_Result_8_fu_427_p3}, {ap_const_lv63_0}};

assign p_Result_78_fu_473_p3 = {{1'b0}, {tmp_38_fu_470_p1}};

assign p_Result_79_fu_487_p3 = p_Val2_7_fu_481_p2[ap_const_lv32_3F];

assign p_Result_80_fu_541_p4 = {{{xs_sign_V_15_fu_516_p2}, {xs_exp_V_12_fu_509_p3}}, {xs_sig_V_16_fu_535_p2}};

assign p_Result_81_fu_729_p3 = {{p_Result_42_reg_1540}, {ap_const_lv63_0}};

assign p_Result_82_fu_740_p3 = {{1'b0}, {tmp_54_reg_1568}};

assign p_Result_83_fu_753_p3 = p_Val2_27_fu_747_p2[ap_const_lv32_3F];

assign p_Result_84_fu_804_p4 = {{{xs_sign_V_fu_781_p2}, {xs_exp_V_fu_775_p3}}, {xs_sig_V_fu_798_p2}};

assign p_Result_8_fu_427_p3 = p_Val2_3_reg_1489[ap_const_lv32_3F];

assign p_Result_s_fu_1120_p3 = {{p_Result_25_reg_1641}, {ap_const_lv63_0}};

assign p_Val2_12_fu_942_p1 = reg_199;

assign p_Val2_17_fu_1040_p2 = (mask_i_cast_fu_1025_p1 + p_Result_70_fu_1032_p3);

assign p_Val2_23_fu_654_p1 = reg_221;

assign p_Val2_27_fu_747_p2 = (p_Result_82_fu_740_p3 + mask_i65_cast_fu_725_p1);

assign p_Val2_32_fu_1229_p1 = reg_221;

assign p_Val2_37_fu_1302_p2 = (p_Result_74_fu_1295_p3 + mask_i14_cast_fu_1291_p1);

assign p_Val2_3_fu_361_p1 = reg_199;

assign p_Val2_7_fu_481_p2 = (mask_i45_cast_fu_454_p1 + p_Result_78_fu_473_p3);

assign p_Val2_s_fu_230_p1 = x;

assign p_i1_fu_863_p3 = ((sel_tmp8_i2_fu_857_p2[0:0] === 1'b1) ? reg_221 : sel_tmp6_i2_fu_843_p3);

assign p_i_fu_599_p3 = ((sel_tmp8_i1_fu_594_p2[0:0] === 1'b1) ? reg_199 : sel_tmp6_i1_reg_1531);

assign r_1_fu_1175_p3 = ((sel_tmp9_i_fu_1170_p2[0:0] === 1'b1) ? ap_const_lv32_BF800000 : reg_215);

assign r_1_to_int_fu_1184_p1 = r_1_reg_1675;

assign r_to_int_fu_607_p1 = reg_215;

assign ret_i_i_i1_fu_814_p1 = p_Result_84_fu_804_p4;

assign ret_i_i_i_fu_551_p1 = p_Result_80_fu_541_p4;

assign ret_i_i_i_i1_fu_736_p1 = p_Result_81_fu_729_p3;

assign ret_i_i_i_i_fu_466_p1 = p_Result_77_fu_458_p3;

assign sel_tmp1_i1_fu_823_p2 = (sel_tmp_i1_fu_818_p2 & tmp_i2_fu_699_p2);

assign sel_tmp1_i_fu_561_p2 = (sel_tmp_i_fu_555_p2 & tmp_i1_fu_434_p2);

assign sel_tmp2_demorgan_i1_fu_1369_p2 = (tmp_i_18_fu_1274_p2 | tmp_i9_fu_1279_p2);

assign sel_tmp2_demorgan_i_fu_1127_p2 = (tmp_i4_reg_1647 | tmp_i_reg_1654);

assign sel_tmp2_i1_fu_829_p3 = ((sel_tmp1_i1_fu_823_p2[0:0] === 1'b1) ? ret_i_i_i_i1_fu_736_p1 : ap_const_lv64_3FF0000000000000);

assign sel_tmp2_i_fu_567_p3 = ((sel_tmp1_i_fu_561_p2[0:0] === 1'b1) ? ret_i_i_i_i_fu_466_p1 : ap_const_lv64_3FF0000000000000);

assign sel_tmp3_i1_fu_1383_p1 = sel_tmp3_v_i1_fu_1375_p3;

assign sel_tmp3_i_fu_1138_p1 = sel_tmp3_v_i_fu_1131_p3;

assign sel_tmp3_v_i1_fu_1375_p3 = ((sel_tmp2_demorgan_i1_fu_1369_p2[0:0] === 1'b1) ? p_Result_73_fu_1284_p3 : p_Result_76_fu_1359_p4);

assign sel_tmp3_v_i_fu_1131_p3 = ((sel_tmp2_demorgan_i_fu_1127_p2[0:0] === 1'b1) ? p_Result_s_fu_1120_p3 : p_Result_72_reg_1660);

assign sel_tmp4_i1_fu_1387_p2 = (tmp_i_18_fu_1274_p2 ^ 1'b1);

assign sel_tmp4_i_fu_1142_p2 = (tmp_i4_reg_1647 ^ 1'b1);

assign sel_tmp5_demorgan_i1_fu_837_p2 = (tmp_i2_fu_699_p2 | tmp_i2_20_fu_704_p2);

assign sel_tmp5_demorgan_i_fu_575_p2 = (tmp_i1_fu_434_p2 | tmp_i1_19_fu_439_p2);

assign sel_tmp5_i1_fu_1393_p2 = (tmp_i9_fu_1279_p2 & sel_tmp4_i1_fu_1387_p2);

assign sel_tmp5_i_fu_1147_p2 = (tmp_i_reg_1654 & sel_tmp4_i_fu_1142_p2);

assign sel_tmp6_i1_fu_581_p3 = ((sel_tmp5_demorgan_i_fu_575_p2[0:0] === 1'b1) ? sel_tmp2_i_fu_567_p3 : ret_i_i_i_fu_551_p1);

assign sel_tmp6_i2_fu_843_p3 = ((sel_tmp5_demorgan_i1_fu_837_p2[0:0] === 1'b1) ? sel_tmp2_i1_fu_829_p3 : ret_i_i_i1_fu_814_p1);

assign sel_tmp6_i3_fu_1399_p3 = ((sel_tmp5_i1_fu_1393_p2[0:0] === 1'b1) ? reg_221 : sel_tmp3_i1_fu_1383_p1);

assign sel_tmp6_i_fu_1152_p3 = ((sel_tmp5_i_fu_1147_p2[0:0] === 1'b1) ? reg_199 : sel_tmp3_i_fu_1138_p1);

assign sel_tmp7_i1_fu_851_p2 = (tmp_i2_fu_699_p2 ^ 1'b1);

assign sel_tmp7_i_fu_589_p2 = (tmp_i1_reg_1521 ^ 1'b1);

assign sel_tmp8_i1_fu_594_p2 = (tmp_i1_19_reg_1526 & sel_tmp7_i_fu_589_p2);

assign sel_tmp8_i2_fu_857_p2 = (tmp_i2_20_fu_704_p2 & sel_tmp7_i1_fu_851_p2);

assign sel_tmp8_i3_fu_1417_p2 = (notrhs_i1_reg_1738 | notlhs_i1_reg_1733);

assign sel_tmp8_i_fu_1161_p2 = (notrhs_i_reg_1670 | notlhs_i_reg_1665);

assign sel_tmp9_i1_fu_1426_p2 = (tmp1_fu_1421_p2 & tmp_i_18_reg_1723);

assign sel_tmp9_i_fu_1170_p2 = (tmp_fu_1165_p2 & tmp_i4_reg_1647);

assign sel_tmp_i1_fu_818_p2 = (p_Result_42_reg_1540 | or_cond_i1_fu_719_p2);

assign sel_tmp_i_fu_555_p2 = (p_Result_8_fu_427_p3 | or_cond_i_fu_449_p2);

assign tmp1_fu_1421_p2 = (p_Result_59_reg_1690 & sel_tmp8_i3_fu_1417_p2);

assign tmp_10_to_int_fu_912_p1 = reg_206;

assign tmp_11_fu_304_p1 = x_assign_to_int_fu_290_p1[22:0];

assign tmp_14_fu_1431_p3 = ((sel_tmp9_i1_fu_1426_p2[0:0] === 1'b1) ? ap_const_lv32_C0000000 : grp_fu_158_p1);

assign tmp_15_fu_326_p2 = (tmp_2_fu_320_p2 & tmp_12_reg_1461);

assign tmp_16_fu_875_p4 = {{x_assign_1_to_int_fu_871_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_17_fu_885_p1 = x_assign_1_to_int_fu_871_p1[22:0];

assign tmp_18_fu_901_p2 = (notrhs3_fu_895_p2 | notlhs3_fu_889_p2);

assign tmp_1_demorgan_fu_260_p2 = (tmp_i_i_fu_248_p2 & tmp_i_i_17_fu_254_p2);

assign tmp_20_fu_907_p2 = (tmp_18_fu_901_p2 & tmp_19_reg_1583);

assign tmp_21_i1_fu_1265_p1 = index_V_3_fu_1255_p4;

assign tmp_21_i_fu_1003_p1 = index_V_1_fu_993_p4;

assign tmp_22_fu_335_p4 = {{tmp_8_to_int_fu_331_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_23_fu_345_p1 = tmp_8_to_int_fu_331_p1[51:0];

assign tmp_23_i1_fu_1347_p2 = (reg_226 ^ ap_const_lv52_FFFFFFFFFFFFF);

assign tmp_23_i_fu_1088_p2 = (reg_226 ^ ap_const_lv52_FFFFFFFFFFFFF);

assign tmp_24_fu_391_p2 = (notrhs4_fu_385_p2 | notlhs4_fu_379_p2);

assign tmp_24_i1_fu_709_p2 = ((loc_V_15_reg_1557 == ap_const_lv52_0) ? 1'b1 : 1'b0);

assign tmp_25_fu_397_p2 = (notrhs5_reg_1479 | notlhs5_reg_1474);

assign tmp_25_i1_fu_714_p2 = ((loc_V_14_reg_1549 == ap_const_lv11_0) ? 1'b1 : 1'b0);

assign tmp_25_i_fu_444_p2 = ((loc_V_10_reg_1495 == ap_const_lv11_0) ? 1'b1 : 1'b0);

assign tmp_26_fu_401_p2 = (tmp_24_fu_391_p2 & tmp_25_fu_397_p2);

assign tmp_26_i1_fu_690_p1 = index_V_2_fu_680_p4;

assign tmp_26_i_fu_422_p1 = index_V_fu_412_p4;

assign tmp_28_fu_407_p2 = (tmp_26_fu_401_p2 & tmp_27_reg_1484);

assign tmp_28_i1_fu_792_p2 = (reg_211 ^ ap_const_lv52_FFFFFFFFFFFFF);

assign tmp_28_i_fu_529_p2 = (reg_211 ^ ap_const_lv52_FFFFFFFFFFFFF);

assign tmp_2_fu_320_p2 = (notrhs2_fu_314_p2 | notlhs2_fu_308_p2);

assign tmp_30_fu_916_p4 = {{tmp_10_to_int_fu_912_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_31_fu_926_p1 = tmp_10_to_int_fu_912_p1[51:0];

assign tmp_32_fu_972_p2 = (notrhs6_fu_966_p2 | notlhs6_fu_960_p2);

assign tmp_33_fu_978_p2 = (notrhs7_reg_1602 | notlhs7_reg_1597);

assign tmp_34_fu_982_p2 = (tmp_32_fu_972_p2 & tmp_33_fu_978_p2);

assign tmp_36_fu_988_p2 = (tmp_34_fu_982_p2 & tmp_35_reg_1607);

assign tmp_37_fu_611_p4 = {{r_to_int_fu_607_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_38_fu_470_p1 = p_Val2_3_reg_1489[62:0];

assign tmp_39_fu_637_p2 = (notrhs8_fu_631_p2 | notlhs8_fu_625_p2);

assign tmp_3_fu_278_p2 = (notrhs_fu_272_p2 | notlhs_fu_266_p2);

assign tmp_40_fu_643_p2 = (tmp_39_fu_637_p2 & tmp_2_reg_1466);

assign tmp_41_fu_621_p1 = r_to_int_fu_607_p1[22:0];

assign tmp_43_fu_648_p2 = (tmp_40_fu_643_p2 & grp_fu_164_p2);

assign tmp_45_fu_1029_p1 = p_Val2_12_reg_1612[62:0];

assign tmp_46_fu_1187_p4 = {{r_1_to_int_fu_1184_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_47_fu_1213_p2 = (notrhs1_fu_1207_p2 | notlhs1_fu_1201_p2);

assign tmp_48_fu_1197_p1 = r_1_to_int_fu_1184_p1[22:0];

assign tmp_49_fu_1219_p2 = (tmp_47_fu_1213_p2 & tmp_18_reg_1588);

assign tmp_51_fu_1224_p2 = (tmp_49_fu_1219_p2 & tmp_50_reg_1681);

assign tmp_54_fu_695_p1 = p_Val2_23_fu_654_p1[62:0];

assign tmp_5_fu_284_p2 = (tmp_3_fu_278_p2 & grp_fu_164_p2);

assign tmp_60_fu_1270_p1 = p_Val2_32_fu_1229_p1[62:0];

assign tmp_8_to_int_fu_331_p1 = reg_206;

assign tmp_9_fu_294_p4 = {{x_assign_to_int_fu_290_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_fu_1165_p2 = (p_Result_25_reg_1641 & sel_tmp8_i_fu_1161_p2);

assign tmp_i1_19_fu_439_p2 = ((loc_V_10_reg_1495 > ap_const_lv11_433) ? 1'b1 : 1'b0);

assign tmp_i1_fu_434_p2 = ((loc_V_10_reg_1495 < ap_const_lv11_3FF) ? 1'b1 : 1'b0);

assign tmp_i2_20_fu_704_p2 = ((loc_V_14_reg_1549 > ap_const_lv11_433) ? 1'b1 : 1'b0);

assign tmp_i2_fu_699_p2 = ((loc_V_14_reg_1549 < ap_const_lv11_3FF) ? 1'b1 : 1'b0);

assign tmp_i4_fu_1015_p2 = ((loc_V_2_reg_1618 < ap_const_lv11_3FF) ? 1'b1 : 1'b0);

assign tmp_i9_fu_1279_p2 = ((loc_V_6_reg_1699 > ap_const_lv11_433) ? 1'b1 : 1'b0);

assign tmp_i_18_fu_1274_p2 = ((loc_V_6_reg_1699 < ap_const_lv11_3FF) ? 1'b1 : 1'b0);

assign tmp_i_fu_1020_p2 = ((loc_V_2_reg_1618 > ap_const_lv11_433) ? 1'b1 : 1'b0);

assign tmp_i_i_17_fu_254_p2 = ((loc_V_1_fu_244_p1 != ap_const_lv23_0) ? 1'b1 : 1'b0);

assign tmp_i_i_fu_248_p2 = ((loc_V_fu_234_p4 == ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign x_assign_1_to_int_fu_871_p1 = reg_192;

assign x_assign_to_int_fu_290_p1 = reg_192;

assign xs_exp_V_10_fu_1068_p3 = ((p_Result_25_fu_1008_p3[0:0] === 1'b1) ? loc_V_4_fu_1054_p4 : loc_V_2_reg_1618);

assign xs_exp_V_11_fu_1330_p3 = ((p_Result_59_reg_1690[0:0] === 1'b1) ? loc_V_8_fu_1316_p4 : loc_V_6_reg_1699);

assign xs_exp_V_12_fu_509_p3 = ((p_Result_8_fu_427_p3[0:0] === 1'b1) ? loc_V_10_reg_1495 : loc_V_12_fu_495_p4);

assign xs_exp_V_fu_775_p3 = ((p_Result_42_reg_1540[0:0] === 1'b1) ? loc_V_14_reg_1549 : loc_V_16_fu_761_p4);

assign xs_sig_V_12_fu_1341_p3 = ((p_Result_59_reg_1690[0:0] === 1'b1) ? loc_V_9_fu_1326_p1 : loc_V_7_reg_1707);

assign xs_sig_V_14_fu_1094_p2 = (xs_sig_V_4_fu_1081_p3 & tmp_23_i_fu_1088_p2);

assign xs_sig_V_15_fu_1353_p2 = (xs_sig_V_12_fu_1341_p3 & tmp_23_i1_fu_1347_p2);

assign xs_sig_V_16_fu_535_p2 = (xs_sig_V_1_fu_522_p3 & tmp_28_i_fu_529_p2);

assign xs_sig_V_1_fu_522_p3 = ((p_Result_8_fu_427_p3[0:0] === 1'b1) ? loc_V_11_reg_1503 : loc_V_13_fu_505_p1);

assign xs_sig_V_4_fu_1081_p3 = ((p_Result_25_fu_1008_p3[0:0] === 1'b1) ? loc_V_5_fu_1064_p1 : loc_V_3_reg_1626);

assign xs_sig_V_8_fu_786_p3 = ((p_Result_42_reg_1540[0:0] === 1'b1) ? loc_V_15_reg_1557 : loc_V_17_fu_771_p1);

assign xs_sig_V_fu_798_p2 = (xs_sig_V_8_fu_786_p3 & tmp_28_i1_fu_792_p2);

assign xs_sign_V_13_fu_1075_p2 = (p_Result_25_fu_1008_p3 & p_Result_71_fu_1046_p3);

assign xs_sign_V_14_fu_1336_p2 = (p_Result_59_reg_1690 & p_Result_75_fu_1308_p3);

assign xs_sign_V_15_fu_516_p2 = (p_Result_8_fu_427_p3 | p_Result_79_fu_487_p3);

assign xs_sign_V_fu_781_p2 = (p_Result_42_reg_1540 | p_Result_83_fu_753_p3);

endmodule //rint
