// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module roundInt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        ap_return
);

parameter    ap_ST_fsm_state1 = 77'd1;
parameter    ap_ST_fsm_state2 = 77'd2;
parameter    ap_ST_fsm_state3 = 77'd4;
parameter    ap_ST_fsm_state4 = 77'd8;
parameter    ap_ST_fsm_state5 = 77'd16;
parameter    ap_ST_fsm_state6 = 77'd32;
parameter    ap_ST_fsm_state7 = 77'd64;
parameter    ap_ST_fsm_state8 = 77'd128;
parameter    ap_ST_fsm_state9 = 77'd256;
parameter    ap_ST_fsm_state10 = 77'd512;
parameter    ap_ST_fsm_state11 = 77'd1024;
parameter    ap_ST_fsm_state12 = 77'd2048;
parameter    ap_ST_fsm_state13 = 77'd4096;
parameter    ap_ST_fsm_state14 = 77'd8192;
parameter    ap_ST_fsm_state15 = 77'd16384;
parameter    ap_ST_fsm_state16 = 77'd32768;
parameter    ap_ST_fsm_state17 = 77'd65536;
parameter    ap_ST_fsm_state18 = 77'd131072;
parameter    ap_ST_fsm_state19 = 77'd262144;
parameter    ap_ST_fsm_state20 = 77'd524288;
parameter    ap_ST_fsm_state21 = 77'd1048576;
parameter    ap_ST_fsm_state22 = 77'd2097152;
parameter    ap_ST_fsm_state23 = 77'd4194304;
parameter    ap_ST_fsm_state24 = 77'd8388608;
parameter    ap_ST_fsm_state25 = 77'd16777216;
parameter    ap_ST_fsm_state26 = 77'd33554432;
parameter    ap_ST_fsm_state27 = 77'd67108864;
parameter    ap_ST_fsm_state28 = 77'd134217728;
parameter    ap_ST_fsm_state29 = 77'd268435456;
parameter    ap_ST_fsm_state30 = 77'd536870912;
parameter    ap_ST_fsm_state31 = 77'd1073741824;
parameter    ap_ST_fsm_state32 = 77'd2147483648;
parameter    ap_ST_fsm_state33 = 77'd4294967296;
parameter    ap_ST_fsm_state34 = 77'd8589934592;
parameter    ap_ST_fsm_state35 = 77'd17179869184;
parameter    ap_ST_fsm_state36 = 77'd34359738368;
parameter    ap_ST_fsm_state37 = 77'd68719476736;
parameter    ap_ST_fsm_state38 = 77'd137438953472;
parameter    ap_ST_fsm_state39 = 77'd274877906944;
parameter    ap_ST_fsm_state40 = 77'd549755813888;
parameter    ap_ST_fsm_state41 = 77'd1099511627776;
parameter    ap_ST_fsm_state42 = 77'd2199023255552;
parameter    ap_ST_fsm_state43 = 77'd4398046511104;
parameter    ap_ST_fsm_state44 = 77'd8796093022208;
parameter    ap_ST_fsm_state45 = 77'd17592186044416;
parameter    ap_ST_fsm_state46 = 77'd35184372088832;
parameter    ap_ST_fsm_state47 = 77'd70368744177664;
parameter    ap_ST_fsm_state48 = 77'd140737488355328;
parameter    ap_ST_fsm_state49 = 77'd281474976710656;
parameter    ap_ST_fsm_state50 = 77'd562949953421312;
parameter    ap_ST_fsm_state51 = 77'd1125899906842624;
parameter    ap_ST_fsm_state52 = 77'd2251799813685248;
parameter    ap_ST_fsm_state53 = 77'd4503599627370496;
parameter    ap_ST_fsm_state54 = 77'd9007199254740992;
parameter    ap_ST_fsm_state55 = 77'd18014398509481984;
parameter    ap_ST_fsm_state56 = 77'd36028797018963968;
parameter    ap_ST_fsm_state57 = 77'd72057594037927936;
parameter    ap_ST_fsm_state58 = 77'd144115188075855872;
parameter    ap_ST_fsm_state59 = 77'd288230376151711744;
parameter    ap_ST_fsm_state60 = 77'd576460752303423488;
parameter    ap_ST_fsm_state61 = 77'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 77'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 77'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 77'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 77'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 77'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 77'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 77'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 77'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 77'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 77'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 77'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 77'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 77'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 77'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 77'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 77'd75557863725914323419136;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] x;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [76:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] mask_table3_address0;
reg    mask_table3_ce0;
wire   [51:0] mask_table3_q0;
reg   [5:0] mask_table1_address0;
reg    mask_table1_ce0;
wire   [51:0] mask_table1_q0;
wire   [63:0] grp_fu_160_p1;
reg   [63:0] reg_190;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state54;
wire   [31:0] grp_fu_151_p2;
reg   [31:0] reg_197;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state46;
wire   [63:0] grp_fu_174_p2;
reg   [63:0] reg_204;
wire   [63:0] grp_fu_180_p2;
reg   [63:0] reg_209;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state76;
wire   [0:0] tmp_2_demorgan_fu_244_p2;
reg   [0:0] tmp_2_demorgan_reg_1453;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_5_fu_285_p2;
reg   [0:0] tmp_5_reg_1457;
wire   [0:0] tmp_6_fu_169_p2;
reg   [0:0] tmp_6_reg_1461;
wire   [0:0] tmp_2_fu_321_p2;
reg   [0:0] tmp_2_reg_1465;
wire    ap_CS_fsm_state9;
wire   [0:0] tmp_14_fu_327_p2;
reg   [0:0] tmp_14_reg_1470;
wire   [0:0] notlhs5_fu_351_p2;
reg   [0:0] notlhs5_reg_1474;
wire    ap_CS_fsm_state17;
wire   [0:0] notrhs5_fu_357_p2;
reg   [0:0] notrhs5_reg_1479;
wire   [0:0] grp_fu_186_p2;
reg   [0:0] tmp_27_reg_1484;
wire   [63:0] p_Val2_3_fu_363_p1;
reg   [63:0] p_Val2_3_reg_1489;
wire    ap_CS_fsm_state18;
wire   [10:0] loc_V_10_fu_367_p4;
reg   [10:0] loc_V_10_reg_1495;
wire   [51:0] loc_V_11_fu_377_p1;
reg   [51:0] loc_V_11_reg_1503;
wire   [0:0] notrhs4_fu_387_p2;
reg   [0:0] notrhs4_reg_1508;
wire   [0:0] tmp_28_fu_409_p2;
reg   [0:0] tmp_28_reg_1513;
wire   [0:0] tmp_i1_fu_436_p2;
reg   [0:0] tmp_i1_reg_1522;
wire    ap_CS_fsm_state19;
wire   [0:0] tmp_i1_19_fu_441_p2;
reg   [0:0] tmp_i1_19_reg_1527;
wire   [63:0] sel_tmp6_i1_fu_583_p3;
reg   [63:0] sel_tmp6_i1_reg_1532;
wire   [31:0] grp_fu_157_p1;
reg   [31:0] r_reg_1537;
wire    ap_CS_fsm_state20;
wire   [0:0] tmp_42_fu_649_p2;
reg   [0:0] tmp_42_reg_1544;
wire    ap_CS_fsm_state21;
reg   [0:0] p_Result_42_reg_1548;
wire    ap_CS_fsm_state29;
reg   [10:0] loc_V_14_reg_1557;
wire   [51:0] loc_V_15_fu_677_p1;
reg   [51:0] loc_V_15_reg_1565;
wire   [62:0] tmp_61_fu_696_p1;
reg   [62:0] tmp_61_reg_1576;
wire   [63:0] p_i1_fu_864_p3;
reg   [63:0] p_i1_reg_1581;
wire    ap_CS_fsm_state30;
reg   [31:0] tmp_11_reg_1586;
wire    ap_CS_fsm_state39;
wire   [0:0] tmp_16_fu_902_p2;
reg   [0:0] tmp_16_reg_1591;
wire    ap_CS_fsm_state47;
wire   [0:0] tmp_19_fu_908_p2;
reg   [0:0] tmp_19_reg_1596;
wire   [0:0] notlhs7_fu_932_p2;
reg   [0:0] notlhs7_reg_1600;
wire    ap_CS_fsm_state55;
wire   [0:0] notrhs7_fu_938_p2;
reg   [0:0] notrhs7_reg_1605;
reg   [0:0] tmp_35_reg_1610;
wire   [63:0] p_Val2_12_fu_944_p1;
reg   [63:0] p_Val2_12_reg_1615;
wire    ap_CS_fsm_state56;
wire   [10:0] loc_V_2_fu_948_p4;
reg   [10:0] loc_V_2_reg_1621;
wire   [51:0] loc_V_3_fu_958_p1;
reg   [51:0] loc_V_3_reg_1629;
wire   [0:0] tmp_36_fu_990_p2;
reg   [0:0] tmp_36_reg_1635;
wire   [0:0] p_Result_25_fu_1010_p3;
reg   [0:0] p_Result_25_reg_1644;
wire    ap_CS_fsm_state57;
wire   [0:0] tmp_i_fu_1017_p2;
reg   [0:0] tmp_i_reg_1650;
wire   [0:0] tmp_i_18_fu_1022_p2;
reg   [0:0] tmp_i_18_reg_1657;
wire   [63:0] p_Result_72_fu_1102_p4;
reg   [63:0] p_Result_72_reg_1663;
wire   [0:0] notlhs_i_fu_1112_p2;
reg   [0:0] notlhs_i_reg_1668;
wire   [0:0] notrhs_i_fu_1117_p2;
reg   [0:0] notrhs_i_reg_1673;
wire   [31:0] r_1_fu_1177_p3;
reg   [31:0] r_1_reg_1678;
wire    ap_CS_fsm_state58;
wire   [0:0] tmp_49_fu_1225_p2;
reg   [0:0] tmp_49_reg_1685;
wire    ap_CS_fsm_state59;
reg   [0:0] p_Result_59_reg_1689;
wire    ap_CS_fsm_state67;
reg   [10:0] loc_V_6_reg_1698;
wire   [51:0] loc_V_7_fu_1253_p1;
reg   [51:0] loc_V_7_reg_1706;
wire   [62:0] tmp_66_fu_1272_p1;
reg   [62:0] tmp_66_reg_1717;
wire   [0:0] tmp_i5_fu_1276_p2;
reg   [0:0] tmp_i5_reg_1722;
wire    ap_CS_fsm_state68;
wire   [63:0] sel_tmp6_i3_fu_1401_p3;
reg   [63:0] sel_tmp6_i3_reg_1727;
wire   [0:0] notlhs_i1_fu_1409_p2;
reg   [0:0] notlhs_i1_reg_1732;
wire   [0:0] notrhs_i1_fu_1414_p2;
reg   [0:0] notrhs_i1_reg_1737;
wire   [31:0] tmp_12_fu_1433_p3;
reg   [31:0] tmp_12_reg_1742;
wire    ap_CS_fsm_state77;
reg   [31:0] p_0_phi_fu_127_p20;
reg   [31:0] p_0_reg_122;
wire    ap_CS_fsm_state40;
wire   [63:0] tmp_24_i_fu_424_p1;
wire   [63:0] tmp_24_i1_fu_691_p1;
wire   [63:0] tmp_19_i_fu_1005_p1;
wire   [63:0] tmp_19_i9_fu_1267_p1;
reg   [31:0] grp_fu_151_p1;
reg   [63:0] grp_fu_157_p0;
wire   [63:0] p_i_fu_601_p3;
wire   [63:0] sel_tmp6_i_fu_1154_p3;
reg   [31:0] grp_fu_160_p0;
reg   [31:0] grp_fu_164_p0;
reg   [31:0] grp_fu_164_p1;
reg   [63:0] grp_fu_174_p1;
reg   [63:0] grp_fu_180_p0;
reg   [63:0] grp_fu_180_p1;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state69;
wire   [63:0] p_Val2_s_fu_214_p1;
wire   [10:0] loc_V_fu_218_p4;
wire   [51:0] loc_V_1_fu_228_p1;
wire   [0:0] tmp_i_i_i_i_fu_232_p2;
wire   [0:0] tmp_i_i_i_i_17_fu_238_p2;
wire   [31:0] x_to_int_fu_250_p1;
wire   [7:0] tmp_1_fu_253_p4;
wire   [22:0] tmp_10_fu_263_p1;
wire   [0:0] notrhs_fu_273_p2;
wire   [0:0] notlhs_fu_267_p2;
wire   [0:0] tmp_3_fu_279_p2;
wire   [0:0] grp_fu_164_p2;
wire   [31:0] x_assign_to_int_fu_291_p1;
wire   [7:0] tmp_8_fu_295_p4;
wire   [22:0] tmp_17_fu_305_p1;
wire   [0:0] notrhs2_fu_315_p2;
wire   [0:0] notlhs2_fu_309_p2;
wire   [63:0] tmp_9_to_int_fu_333_p1;
wire   [10:0] tmp_20_fu_337_p4;
wire   [51:0] tmp_23_fu_347_p1;
wire   [0:0] notlhs4_fu_381_p2;
wire   [0:0] tmp_24_fu_393_p2;
wire   [0:0] tmp_25_fu_399_p2;
wire   [0:0] tmp_26_fu_403_p2;
wire   [5:0] index_V_fu_414_p4;
wire   [0:0] tmp_23_i_fu_446_p2;
wire   [0:0] p_Result_8_fu_429_p3;
wire   [63:0] p_Result_77_fu_460_p3;
wire   [62:0] tmp_38_fu_472_p1;
wire   [63:0] mask_i42_cast_fu_456_p1;
wire   [63:0] p_Result_78_fu_475_p3;
wire   [63:0] p_Val2_7_fu_483_p2;
wire   [10:0] loc_V_12_fu_497_p4;
wire   [0:0] p_Result_79_fu_489_p3;
wire   [51:0] loc_V_13_fu_507_p1;
wire   [51:0] xs_sig_V_1_fu_524_p3;
wire   [51:0] tmp_26_i_fu_531_p2;
wire   [0:0] xs_sign_V_15_fu_518_p2;
wire   [10:0] xs_exp_V_12_fu_511_p3;
wire   [51:0] xs_sig_V_16_fu_537_p2;
wire   [63:0] p_Result_80_fu_543_p4;
wire   [0:0] or_cond_i_fu_451_p2;
wire   [0:0] sel_tmp_i_fu_557_p2;
wire   [0:0] sel_tmp1_i_fu_563_p2;
wire   [63:0] ret_i_i_i_i_fu_468_p1;
wire   [0:0] sel_tmp5_demorgan_i_fu_577_p2;
wire   [63:0] sel_tmp2_i_fu_569_p3;
wire   [63:0] ret_i_i_i_fu_553_p1;
wire   [0:0] sel_tmp7_i_fu_591_p2;
wire   [0:0] sel_tmp8_i1_fu_596_p2;
wire   [31:0] r_to_int_fu_609_p1;
wire   [7:0] tmp_37_fu_612_p4;
wire   [22:0] tmp_46_fu_622_p1;
wire   [0:0] notrhs8_fu_632_p2;
wire   [0:0] notlhs8_fu_626_p2;
wire   [0:0] tmp_39_fu_638_p2;
wire   [0:0] tmp_40_fu_644_p2;
wire   [63:0] p_Val2_23_fu_655_p1;
wire   [5:0] index_V_2_fu_681_p4;
wire   [0:0] tmp_22_i1_fu_710_p2;
wire   [0:0] tmp_23_i1_fu_715_p2;
wire   [63:0] p_Result_81_fu_730_p3;
wire   [63:0] p_Result_82_fu_741_p3;
wire   [63:0] mask_i62_cast_fu_726_p1;
wire   [63:0] p_Val2_27_fu_748_p2;
wire   [10:0] loc_V_16_fu_762_p4;
wire   [0:0] p_Result_83_fu_754_p3;
wire   [51:0] loc_V_17_fu_772_p1;
wire   [51:0] xs_sig_V_8_fu_787_p3;
wire   [51:0] tmp_26_i1_fu_793_p2;
wire   [0:0] xs_sign_V_fu_782_p2;
wire   [10:0] xs_exp_V_fu_776_p3;
wire   [51:0] xs_sig_V_fu_799_p2;
wire   [63:0] p_Result_84_fu_805_p4;
wire   [0:0] or_cond_i1_fu_720_p2;
wire   [0:0] sel_tmp_i1_fu_819_p2;
wire   [0:0] tmp_i2_fu_700_p2;
wire   [0:0] sel_tmp1_i1_fu_824_p2;
wire   [63:0] ret_i_i_i_i1_fu_737_p1;
wire   [0:0] tmp_i2_20_fu_705_p2;
wire   [0:0] sel_tmp5_demorgan_i1_fu_838_p2;
wire   [63:0] sel_tmp2_i1_fu_830_p3;
wire   [63:0] ret_i_i_i1_fu_815_p1;
wire   [0:0] sel_tmp7_i1_fu_852_p2;
wire   [0:0] sel_tmp8_i2_fu_858_p2;
wire   [63:0] sel_tmp6_i2_fu_844_p3;
wire   [31:0] x_assign_1_to_int_fu_872_p1;
wire   [7:0] tmp_15_fu_876_p4;
wire   [22:0] tmp_21_fu_886_p1;
wire   [0:0] notrhs3_fu_896_p2;
wire   [0:0] notlhs3_fu_890_p2;
wire   [63:0] tmp_7_to_int_fu_914_p1;
wire   [10:0] tmp_30_fu_918_p4;
wire   [51:0] tmp_31_fu_928_p1;
wire   [0:0] notrhs6_fu_968_p2;
wire   [0:0] notlhs6_fu_962_p2;
wire   [0:0] tmp_32_fu_974_p2;
wire   [0:0] tmp_33_fu_980_p2;
wire   [0:0] tmp_34_fu_984_p2;
wire   [5:0] index_V_1_fu_995_p4;
wire   [62:0] tmp_54_fu_1031_p1;
wire   [63:0] mask_i_cast_fu_1027_p1;
wire   [63:0] p_Result_70_fu_1034_p3;
wire   [63:0] p_Val2_17_fu_1042_p2;
wire   [10:0] loc_V_4_fu_1056_p4;
wire   [0:0] p_Result_71_fu_1048_p3;
wire   [51:0] loc_V_5_fu_1066_p1;
wire   [51:0] xs_sig_V_4_fu_1083_p3;
wire   [51:0] tmp_21_i_fu_1090_p2;
wire   [0:0] xs_sign_V_13_fu_1077_p2;
wire   [10:0] xs_exp_V_10_fu_1070_p3;
wire   [51:0] xs_sig_V_14_fu_1096_p2;
wire   [0:0] sel_tmp2_demorgan_i_fu_1129_p2;
wire   [63:0] p_Result_s_fu_1122_p3;
wire   [63:0] sel_tmp3_v_i_fu_1133_p3;
wire   [0:0] sel_tmp4_i_fu_1144_p2;
wire   [0:0] sel_tmp5_i_fu_1149_p2;
wire   [63:0] sel_tmp3_i_fu_1140_p1;
wire   [0:0] sel_tmp8_i_fu_1163_p2;
wire   [0:0] tmp_fu_1167_p2;
wire   [0:0] sel_tmp9_i_fu_1172_p2;
wire   [31:0] r_1_to_int_fu_1185_p1;
wire   [7:0] tmp_44_fu_1188_p4;
wire   [22:0] tmp_58_fu_1198_p1;
wire   [0:0] notrhs1_fu_1208_p2;
wire   [0:0] notlhs1_fu_1202_p2;
wire   [0:0] tmp_45_fu_1214_p2;
wire   [0:0] tmp_47_fu_1220_p2;
wire   [63:0] p_Val2_32_fu_1231_p1;
wire   [5:0] index_V_3_fu_1257_p4;
wire   [63:0] p_Result_74_fu_1297_p3;
wire   [63:0] mask_i11_cast_fu_1293_p1;
wire   [63:0] p_Val2_37_fu_1304_p2;
wire   [10:0] loc_V_8_fu_1318_p4;
wire   [0:0] p_Result_75_fu_1310_p3;
wire   [51:0] loc_V_9_fu_1328_p1;
wire   [51:0] xs_sig_V_12_fu_1343_p3;
wire   [51:0] tmp_21_i1_fu_1349_p2;
wire   [0:0] xs_sign_V_14_fu_1338_p2;
wire   [10:0] xs_exp_V_11_fu_1332_p3;
wire   [51:0] xs_sig_V_15_fu_1355_p2;
wire   [0:0] tmp_i6_fu_1281_p2;
wire   [0:0] sel_tmp2_demorgan_i1_fu_1371_p2;
wire   [63:0] p_Result_73_fu_1286_p3;
wire   [63:0] p_Result_76_fu_1361_p4;
wire   [63:0] sel_tmp3_v_i1_fu_1377_p3;
wire   [0:0] sel_tmp4_i1_fu_1389_p2;
wire   [0:0] sel_tmp5_i1_fu_1395_p2;
wire   [63:0] sel_tmp3_i1_fu_1385_p1;
wire   [0:0] sel_tmp8_i3_fu_1419_p2;
wire   [0:0] tmp1_fu_1423_p2;
wire   [0:0] sel_tmp9_i1_fu_1428_p2;
reg   [4:0] grp_fu_164_opcode;
reg   [31:0] ap_return_preg;
reg   [76:0] ap_NS_fsm;
reg    ap_condition_1620;
reg    ap_condition_1626;

// power-on initialization
initial begin
#0 ap_CS_fsm = 77'd1;
#0 ap_return_preg = 32'd0;
end

roundInt_mask_tabfYi #(
    .DataWidth( 52 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mask_table3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table3_address0),
    .ce0(mask_table3_ce0),
    .q0(mask_table3_q0)
);

roundInt_mask_tabfYi #(
    .DataWidth( 52 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mask_table1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table1_address0),
    .ce0(mask_table1_ce0),
    .q0(mask_table1_q0)
);

md_fadd_32ns_32nshbi #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
md_fadd_32ns_32nshbi_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x),
    .din1(grp_fu_151_p1),
    .ce(1'b1),
    .dout(grp_fu_151_p2)
);

md_fptrunc_64ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
md_fptrunc_64ns_3ibs_U71(
    .din0(grp_fu_157_p0),
    .dout(grp_fu_157_p1)
);

md_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
md_fpext_32ns_64_1_U72(
    .din0(grp_fu_160_p0),
    .dout(grp_fu_160_p1)
);

md_fcmp_32ns_32nsjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
md_fcmp_32ns_32nsjbC_U73(
    .din0(grp_fu_164_p0),
    .din1(grp_fu_164_p1),
    .opcode(grp_fu_164_opcode),
    .dout(grp_fu_164_p2)
);

md_fcmp_32ns_32nsjbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
md_fcmp_32ns_32nsjbC_U74(
    .din0(x),
    .din1(32'd0),
    .opcode(5'd1),
    .dout(tmp_6_fu_169_p2)
);

md_dadd_64ns_64nskbM #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
md_dadd_64ns_64nskbM_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_190),
    .din1(grp_fu_174_p1),
    .ce(1'b1),
    .dout(grp_fu_174_p2)
);

md_dmul_64ns_64nslbW #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
md_dmul_64ns_64nslbW_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_180_p0),
    .din1(grp_fu_180_p1),
    .ce(1'b1),
    .dout(grp_fu_180_p2)
);

md_dcmp_64ns_64nsmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
md_dcmp_64ns_64nsmb6_U77(
    .din0(reg_190),
    .din1(reg_204),
    .opcode(5'd1),
    .dout(grp_fu_186_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_return_preg <= p_0_phi_fu_127_p20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (1'd0 == tmp_42_fu_649_p2))) begin
        p_0_reg_122 <= r_reg_1537;
    end else if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == tmp_14_fu_327_p2))) begin
        p_0_reg_122 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state59) & (1'd0 == tmp_49_fu_1225_p2))) begin
        p_0_reg_122 <= r_1_reg_1678;
    end else if (((1'b1 == ap_CS_fsm_state47) & (1'd1 == tmp_19_fu_908_p2))) begin
        p_0_reg_122 <= 32'd2147483648;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (tmp_2_demorgan_fu_244_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (tmp_2_demorgan_fu_244_p2 == 1'd0) & (tmp_5_fu_285_p2 == 1'd1) & (tmp_6_fu_169_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state56) & (1'd1 == tmp_36_fu_990_p2)) | ((1'b1 == ap_CS_fsm_state18) & (1'd1 == tmp_28_fu_409_p2)))) begin
        p_0_reg_122 <= x;
    end else if (((1'b1 == ap_CS_fsm_state40) & (tmp_2_demorgan_reg_1453 == 1'd0) & (tmp_5_reg_1457 == 1'd0) & (1'd0 == tmp_14_reg_1470) & (1'd0 == tmp_28_reg_1513) & (1'd1 == tmp_42_reg_1544))) begin
        p_0_reg_122 <= tmp_11_reg_1586;
    end else if (((1'b1 == ap_CS_fsm_state40) & (tmp_2_demorgan_reg_1453 == 1'd0) & (tmp_5_reg_1457 == 1'd1) & (1'd0 == tmp_6_reg_1461) & (1'd0 == tmp_19_reg_1596) & (1'd0 == tmp_36_reg_1635) & (1'd1 == tmp_49_reg_1685))) begin
        p_0_reg_122 <= tmp_12_reg_1742;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        loc_V_10_reg_1495 <= {{p_Val2_3_fu_363_p1[62:52]}};
        loc_V_11_reg_1503 <= loc_V_11_fu_377_p1;
        notrhs4_reg_1508 <= notrhs4_fu_387_p2;
        p_Val2_3_reg_1489 <= p_Val2_3_fu_363_p1;
        tmp_28_reg_1513 <= tmp_28_fu_409_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        loc_V_14_reg_1557 <= {{p_Val2_23_fu_655_p1[62:52]}};
        loc_V_15_reg_1565 <= loc_V_15_fu_677_p1;
        p_Result_42_reg_1548 <= p_Val2_23_fu_655_p1[32'd63];
        tmp_61_reg_1576 <= tmp_61_fu_696_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        loc_V_2_reg_1621 <= {{p_Val2_12_fu_944_p1[62:52]}};
        loc_V_3_reg_1629 <= loc_V_3_fu_958_p1;
        p_Val2_12_reg_1615 <= p_Val2_12_fu_944_p1;
        tmp_36_reg_1635 <= tmp_36_fu_990_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        loc_V_6_reg_1698 <= {{p_Val2_32_fu_1231_p1[62:52]}};
        loc_V_7_reg_1706 <= loc_V_7_fu_1253_p1;
        p_Result_59_reg_1689 <= p_Val2_32_fu_1231_p1[32'd63];
        tmp_66_reg_1717 <= tmp_66_fu_1272_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        notlhs5_reg_1474 <= notlhs5_fu_351_p2;
        notrhs5_reg_1479 <= notrhs5_fu_357_p2;
        tmp_27_reg_1484 <= grp_fu_186_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        notlhs7_reg_1600 <= notlhs7_fu_932_p2;
        notrhs7_reg_1605 <= notrhs7_fu_938_p2;
        tmp_35_reg_1610 <= grp_fu_186_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        notlhs_i1_reg_1732 <= notlhs_i1_fu_1409_p2;
        notrhs_i1_reg_1737 <= notrhs_i1_fu_1414_p2;
        sel_tmp6_i3_reg_1727 <= sel_tmp6_i3_fu_1401_p3;
        tmp_i5_reg_1722 <= tmp_i5_fu_1276_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        notlhs_i_reg_1668 <= notlhs_i_fu_1112_p2;
        notrhs_i_reg_1673 <= notrhs_i_fu_1117_p2;
        p_Result_25_reg_1644 <= p_Val2_12_reg_1615[32'd63];
        p_Result_72_reg_1663 <= p_Result_72_fu_1102_p4;
        tmp_i_18_reg_1657 <= tmp_i_18_fu_1022_p2;
        tmp_i_reg_1650 <= tmp_i_fu_1017_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        p_i1_reg_1581 <= p_i1_fu_864_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        r_1_reg_1678 <= r_1_fu_1177_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        r_reg_1537 <= grp_fu_157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state54))) begin
        reg_190 <= grp_fu_160_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state46))) begin
        reg_197 <= grp_fu_151_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state54))) begin
        reg_204 <= grp_fu_174_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state76))) begin
        reg_209 <= grp_fu_180_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        sel_tmp6_i1_reg_1532 <= sel_tmp6_i1_fu_583_p3;
        tmp_i1_19_reg_1527 <= tmp_i1_19_fu_441_p2;
        tmp_i1_reg_1522 <= tmp_i1_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_11_reg_1586 <= grp_fu_157_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        tmp_12_reg_1742 <= tmp_12_fu_1433_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_14_reg_1470 <= tmp_14_fu_327_p2;
        tmp_2_reg_1465 <= tmp_2_fu_321_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        tmp_16_reg_1591 <= tmp_16_fu_902_p2;
        tmp_19_reg_1596 <= tmp_19_fu_908_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_2_demorgan_reg_1453 <= tmp_2_demorgan_fu_244_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_42_reg_1544 <= tmp_42_fu_649_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        tmp_49_reg_1685 <= tmp_49_fu_1225_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_2_demorgan_fu_244_p2 == 1'd0))) begin
        tmp_5_reg_1457 <= tmp_5_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_2_demorgan_fu_244_p2 == 1'd0) & (tmp_5_fu_285_p2 == 1'd1))) begin
        tmp_6_reg_1461 <= tmp_6_fu_169_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state40))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_return = p_0_phi_fu_127_p20;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_2_demorgan_fu_244_p2 == 1'd0))) begin
        if (((tmp_5_fu_285_p2 == 1'd1) & (1'd0 == tmp_6_fu_169_p2))) begin
            grp_fu_151_p1 = 32'd1056964608;
        end else if ((tmp_5_fu_285_p2 == 1'd0)) begin
            grp_fu_151_p1 = 32'd3204448256;
        end else begin
            grp_fu_151_p1 = 'bx;
        end
    end else begin
        grp_fu_151_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_157_p0 = sel_tmp6_i_fu_1154_p3;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state77))) begin
        grp_fu_157_p0 = reg_209;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_157_p0 = p_i_fu_601_p3;
    end else begin
        grp_fu_157_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state54))) begin
        grp_fu_160_p0 = reg_197;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_160_p0 = x;
    end else begin
        grp_fu_160_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_164_opcode = 5'd3;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_164_opcode = 5'd1;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (tmp_2_demorgan_fu_244_p2 == 1'd0)) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_164_opcode = 5'd5;
    end else begin
        grp_fu_164_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_164_p0 = r_1_reg_1678;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_164_p0 = r_reg_1537;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state47))) begin
        grp_fu_164_p0 = reg_197;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_164_p0 = x;
    end else begin
        grp_fu_164_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_164_p1 = reg_197;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state47))) begin
        grp_fu_164_p1 = 32'd0;
    end else begin
        grp_fu_164_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_174_p1 = 64'd4607182418800017408;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_174_p1 = 64'd13830554455654793216;
    end else begin
        grp_fu_174_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_180_p0 = sel_tmp6_i3_reg_1727;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_180_p0 = p_i1_reg_1581;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_180_p0 = reg_190;
    end else begin
        grp_fu_180_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state69))) begin
        grp_fu_180_p1 = 64'd4611686018427387904;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_180_p1 = 64'd4602678819172646912;
    end else begin
        grp_fu_180_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        mask_table1_address0 = tmp_24_i1_fu_691_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        mask_table1_address0 = tmp_24_i_fu_424_p1;
    end else begin
        mask_table1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state29))) begin
        mask_table1_ce0 = 1'b1;
    end else begin
        mask_table1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        mask_table3_address0 = tmp_19_i9_fu_1267_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        mask_table3_address0 = tmp_19_i_fu_1005_p1;
    end else begin
        mask_table3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state67))) begin
        mask_table3_ce0 = 1'b1;
    end else begin
        mask_table3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (tmp_2_demorgan_reg_1453 == 1'd0))) begin
        if ((ap_condition_1626 == 1'b1)) begin
            p_0_phi_fu_127_p20 = tmp_11_reg_1586;
        end else if ((ap_condition_1620 == 1'b1)) begin
            p_0_phi_fu_127_p20 = tmp_12_reg_1742;
        end else begin
            p_0_phi_fu_127_p20 = p_0_reg_122;
        end
    end else begin
        p_0_phi_fu_127_p20 = p_0_reg_122;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_2_demorgan_fu_244_p2 == 1'd0) & (tmp_5_fu_285_p2 == 1'd1) & (1'd0 == tmp_6_fu_169_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_2_demorgan_fu_244_p2 == 1'd0) & (tmp_5_fu_285_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == tmp_14_fu_327_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (1'd1 == tmp_28_fu_409_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (1'd0 == tmp_42_fu_649_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((1'b1 == ap_CS_fsm_state47) & (1'd0 == tmp_19_fu_908_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            if (((1'b1 == ap_CS_fsm_state56) & (1'd0 == tmp_36_fu_990_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (1'd1 == tmp_49_fu_1225_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_1620 = ((tmp_5_reg_1457 == 1'd1) & (1'd0 == tmp_6_reg_1461) & (1'd0 == tmp_19_reg_1596) & (1'd0 == tmp_36_reg_1635) & (1'd1 == tmp_49_reg_1685));
end

always @ (*) begin
    ap_condition_1626 = ((tmp_5_reg_1457 == 1'd0) & (1'd0 == tmp_14_reg_1470) & (1'd0 == tmp_28_reg_1513) & (1'd1 == tmp_42_reg_1544));
end

assign index_V_1_fu_995_p4 = {{p_Val2_12_fu_944_p1[57:52]}};

assign index_V_2_fu_681_p4 = {{p_Val2_23_fu_655_p1[57:52]}};

assign index_V_3_fu_1257_p4 = {{p_Val2_32_fu_1231_p1[57:52]}};

assign index_V_fu_414_p4 = {{p_Val2_3_fu_363_p1[57:52]}};

assign loc_V_10_fu_367_p4 = {{p_Val2_3_fu_363_p1[62:52]}};

assign loc_V_11_fu_377_p1 = p_Val2_3_fu_363_p1[51:0];

assign loc_V_12_fu_497_p4 = {{p_Val2_7_fu_483_p2[62:52]}};

assign loc_V_13_fu_507_p1 = p_Val2_7_fu_483_p2[51:0];

assign loc_V_15_fu_677_p1 = p_Val2_23_fu_655_p1[51:0];

assign loc_V_16_fu_762_p4 = {{p_Val2_27_fu_748_p2[62:52]}};

assign loc_V_17_fu_772_p1 = p_Val2_27_fu_748_p2[51:0];

assign loc_V_1_fu_228_p1 = p_Val2_s_fu_214_p1[51:0];

assign loc_V_2_fu_948_p4 = {{p_Val2_12_fu_944_p1[62:52]}};

assign loc_V_3_fu_958_p1 = p_Val2_12_fu_944_p1[51:0];

assign loc_V_4_fu_1056_p4 = {{p_Val2_17_fu_1042_p2[62:52]}};

assign loc_V_5_fu_1066_p1 = p_Val2_17_fu_1042_p2[51:0];

assign loc_V_7_fu_1253_p1 = p_Val2_32_fu_1231_p1[51:0];

assign loc_V_8_fu_1318_p4 = {{p_Val2_37_fu_1304_p2[62:52]}};

assign loc_V_9_fu_1328_p1 = p_Val2_37_fu_1304_p2[51:0];

assign loc_V_fu_218_p4 = {{p_Val2_s_fu_214_p1[62:52]}};

assign mask_i11_cast_fu_1293_p1 = mask_table3_q0;

assign mask_i42_cast_fu_456_p1 = mask_table1_q0;

assign mask_i62_cast_fu_726_p1 = mask_table1_q0;

assign mask_i_cast_fu_1027_p1 = mask_table3_q0;

assign notlhs1_fu_1202_p2 = ((tmp_44_fu_1188_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs2_fu_309_p2 = ((tmp_8_fu_295_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs3_fu_890_p2 = ((tmp_15_fu_876_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs4_fu_381_p2 = ((loc_V_10_fu_367_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs5_fu_351_p2 = ((tmp_20_fu_337_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs6_fu_962_p2 = ((loc_V_2_fu_948_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs7_fu_932_p2 = ((tmp_30_fu_918_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign notlhs8_fu_626_p2 = ((tmp_37_fu_612_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_267_p2 = ((tmp_1_fu_253_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_i1_fu_1409_p2 = ((loc_V_7_reg_1706 != 52'd0) ? 1'b1 : 1'b0);

assign notlhs_i_fu_1112_p2 = ((loc_V_3_reg_1629 != 52'd0) ? 1'b1 : 1'b0);

assign notrhs1_fu_1208_p2 = ((tmp_58_fu_1198_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_315_p2 = ((tmp_17_fu_305_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs3_fu_896_p2 = ((tmp_21_fu_886_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs4_fu_387_p2 = ((loc_V_11_fu_377_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs5_fu_357_p2 = ((tmp_23_fu_347_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs6_fu_968_p2 = ((loc_V_3_fu_958_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs7_fu_938_p2 = ((tmp_31_fu_928_p1 == 52'd0) ? 1'b1 : 1'b0);

assign notrhs8_fu_632_p2 = ((tmp_46_fu_622_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_273_p2 = ((tmp_10_fu_263_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_i1_fu_1414_p2 = ((loc_V_6_reg_1698 != 11'd0) ? 1'b1 : 1'b0);

assign notrhs_i_fu_1117_p2 = ((loc_V_2_reg_1621 != 11'd0) ? 1'b1 : 1'b0);

assign or_cond_i1_fu_720_p2 = (tmp_22_i1_fu_710_p2 & tmp_23_i1_fu_715_p2);

assign or_cond_i_fu_451_p2 = (notrhs4_reg_1508 & tmp_23_i_fu_446_p2);

assign p_Result_25_fu_1010_p3 = p_Val2_12_reg_1615[32'd63];

assign p_Result_70_fu_1034_p3 = {{1'd1}, {tmp_54_fu_1031_p1}};

assign p_Result_71_fu_1048_p3 = p_Val2_17_fu_1042_p2[32'd63];

assign p_Result_72_fu_1102_p4 = {{{xs_sign_V_13_fu_1077_p2}, {xs_exp_V_10_fu_1070_p3}}, {xs_sig_V_14_fu_1096_p2}};

assign p_Result_73_fu_1286_p3 = {{p_Result_59_reg_1689}, {63'd0}};

assign p_Result_74_fu_1297_p3 = {{1'd1}, {tmp_66_reg_1717}};

assign p_Result_75_fu_1310_p3 = p_Val2_37_fu_1304_p2[32'd63];

assign p_Result_76_fu_1361_p4 = {{{xs_sign_V_14_fu_1338_p2}, {xs_exp_V_11_fu_1332_p3}}, {xs_sig_V_15_fu_1355_p2}};

assign p_Result_77_fu_460_p3 = {{p_Result_8_fu_429_p3}, {63'd0}};

assign p_Result_78_fu_475_p3 = {{1'd0}, {tmp_38_fu_472_p1}};

assign p_Result_79_fu_489_p3 = p_Val2_7_fu_483_p2[32'd63];

assign p_Result_80_fu_543_p4 = {{{xs_sign_V_15_fu_518_p2}, {xs_exp_V_12_fu_511_p3}}, {xs_sig_V_16_fu_537_p2}};

assign p_Result_81_fu_730_p3 = {{p_Result_42_reg_1548}, {63'd0}};

assign p_Result_82_fu_741_p3 = {{1'd0}, {tmp_61_reg_1576}};

assign p_Result_83_fu_754_p3 = p_Val2_27_fu_748_p2[32'd63];

assign p_Result_84_fu_805_p4 = {{{xs_sign_V_fu_782_p2}, {xs_exp_V_fu_776_p3}}, {xs_sig_V_fu_799_p2}};

assign p_Result_8_fu_429_p3 = p_Val2_3_reg_1489[32'd63];

assign p_Result_s_fu_1122_p3 = {{p_Result_25_reg_1644}, {63'd0}};

assign p_Val2_12_fu_944_p1 = reg_190;

assign p_Val2_17_fu_1042_p2 = (mask_i_cast_fu_1027_p1 + p_Result_70_fu_1034_p3);

assign p_Val2_23_fu_655_p1 = reg_209;

assign p_Val2_27_fu_748_p2 = (p_Result_82_fu_741_p3 + mask_i62_cast_fu_726_p1);

assign p_Val2_32_fu_1231_p1 = reg_209;

assign p_Val2_37_fu_1304_p2 = (p_Result_74_fu_1297_p3 + mask_i11_cast_fu_1293_p1);

assign p_Val2_3_fu_363_p1 = reg_190;

assign p_Val2_7_fu_483_p2 = (mask_i42_cast_fu_456_p1 + p_Result_78_fu_475_p3);

assign p_Val2_s_fu_214_p1 = reg_190;

assign p_i1_fu_864_p3 = ((sel_tmp8_i2_fu_858_p2[0:0] === 1'b1) ? reg_209 : sel_tmp6_i2_fu_844_p3);

assign p_i_fu_601_p3 = ((sel_tmp8_i1_fu_596_p2[0:0] === 1'b1) ? reg_190 : sel_tmp6_i1_reg_1532);

assign r_1_fu_1177_p3 = ((sel_tmp9_i_fu_1172_p2[0:0] === 1'b1) ? 32'd3212836864 : grp_fu_157_p1);

assign r_1_to_int_fu_1185_p1 = r_1_reg_1678;

assign r_to_int_fu_609_p1 = r_reg_1537;

assign ret_i_i_i1_fu_815_p1 = p_Result_84_fu_805_p4;

assign ret_i_i_i_fu_553_p1 = p_Result_80_fu_543_p4;

assign ret_i_i_i_i1_fu_737_p1 = p_Result_81_fu_730_p3;

assign ret_i_i_i_i_fu_468_p1 = p_Result_77_fu_460_p3;

assign sel_tmp1_i1_fu_824_p2 = (sel_tmp_i1_fu_819_p2 & tmp_i2_fu_700_p2);

assign sel_tmp1_i_fu_563_p2 = (sel_tmp_i_fu_557_p2 & tmp_i1_fu_436_p2);

assign sel_tmp2_demorgan_i1_fu_1371_p2 = (tmp_i5_fu_1276_p2 | tmp_i6_fu_1281_p2);

assign sel_tmp2_demorgan_i_fu_1129_p2 = (tmp_i_reg_1650 | tmp_i_18_reg_1657);

assign sel_tmp2_i1_fu_830_p3 = ((sel_tmp1_i1_fu_824_p2[0:0] === 1'b1) ? ret_i_i_i_i1_fu_737_p1 : 64'd4607182418800017408);

assign sel_tmp2_i_fu_569_p3 = ((sel_tmp1_i_fu_563_p2[0:0] === 1'b1) ? ret_i_i_i_i_fu_468_p1 : 64'd4607182418800017408);

assign sel_tmp3_i1_fu_1385_p1 = sel_tmp3_v_i1_fu_1377_p3;

assign sel_tmp3_i_fu_1140_p1 = sel_tmp3_v_i_fu_1133_p3;

assign sel_tmp3_v_i1_fu_1377_p3 = ((sel_tmp2_demorgan_i1_fu_1371_p2[0:0] === 1'b1) ? p_Result_73_fu_1286_p3 : p_Result_76_fu_1361_p4);

assign sel_tmp3_v_i_fu_1133_p3 = ((sel_tmp2_demorgan_i_fu_1129_p2[0:0] === 1'b1) ? p_Result_s_fu_1122_p3 : p_Result_72_reg_1663);

assign sel_tmp4_i1_fu_1389_p2 = (tmp_i5_fu_1276_p2 ^ 1'd1);

assign sel_tmp4_i_fu_1144_p2 = (tmp_i_reg_1650 ^ 1'd1);

assign sel_tmp5_demorgan_i1_fu_838_p2 = (tmp_i2_fu_700_p2 | tmp_i2_20_fu_705_p2);

assign sel_tmp5_demorgan_i_fu_577_p2 = (tmp_i1_fu_436_p2 | tmp_i1_19_fu_441_p2);

assign sel_tmp5_i1_fu_1395_p2 = (tmp_i6_fu_1281_p2 & sel_tmp4_i1_fu_1389_p2);

assign sel_tmp5_i_fu_1149_p2 = (tmp_i_18_reg_1657 & sel_tmp4_i_fu_1144_p2);

assign sel_tmp6_i1_fu_583_p3 = ((sel_tmp5_demorgan_i_fu_577_p2[0:0] === 1'b1) ? sel_tmp2_i_fu_569_p3 : ret_i_i_i_fu_553_p1);

assign sel_tmp6_i2_fu_844_p3 = ((sel_tmp5_demorgan_i1_fu_838_p2[0:0] === 1'b1) ? sel_tmp2_i1_fu_830_p3 : ret_i_i_i1_fu_815_p1);

assign sel_tmp6_i3_fu_1401_p3 = ((sel_tmp5_i1_fu_1395_p2[0:0] === 1'b1) ? reg_209 : sel_tmp3_i1_fu_1385_p1);

assign sel_tmp6_i_fu_1154_p3 = ((sel_tmp5_i_fu_1149_p2[0:0] === 1'b1) ? reg_190 : sel_tmp3_i_fu_1140_p1);

assign sel_tmp7_i1_fu_852_p2 = (tmp_i2_fu_700_p2 ^ 1'd1);

assign sel_tmp7_i_fu_591_p2 = (tmp_i1_reg_1522 ^ 1'd1);

assign sel_tmp8_i1_fu_596_p2 = (tmp_i1_19_reg_1527 & sel_tmp7_i_fu_591_p2);

assign sel_tmp8_i2_fu_858_p2 = (tmp_i2_20_fu_705_p2 & sel_tmp7_i1_fu_852_p2);

assign sel_tmp8_i3_fu_1419_p2 = (notrhs_i1_reg_1737 | notlhs_i1_reg_1732);

assign sel_tmp8_i_fu_1163_p2 = (notrhs_i_reg_1673 | notlhs_i_reg_1668);

assign sel_tmp9_i1_fu_1428_p2 = (tmp1_fu_1423_p2 & tmp_i5_reg_1722);

assign sel_tmp9_i_fu_1172_p2 = (tmp_fu_1167_p2 & tmp_i_reg_1650);

assign sel_tmp_i1_fu_819_p2 = (p_Result_42_reg_1548 | or_cond_i1_fu_720_p2);

assign sel_tmp_i_fu_557_p2 = (p_Result_8_fu_429_p3 | or_cond_i_fu_451_p2);

assign tmp1_fu_1423_p2 = (p_Result_59_reg_1689 & sel_tmp8_i3_fu_1419_p2);

assign tmp_10_fu_263_p1 = x_to_int_fu_250_p1[22:0];

assign tmp_12_fu_1433_p3 = ((sel_tmp9_i1_fu_1428_p2[0:0] === 1'b1) ? 32'd3221225472 : grp_fu_157_p1);

assign tmp_14_fu_327_p2 = (tmp_2_fu_321_p2 & grp_fu_164_p2);

assign tmp_15_fu_876_p4 = {{x_assign_1_to_int_fu_872_p1[30:23]}};

assign tmp_16_fu_902_p2 = (notrhs3_fu_896_p2 | notlhs3_fu_890_p2);

assign tmp_17_fu_305_p1 = x_assign_to_int_fu_291_p1[22:0];

assign tmp_19_fu_908_p2 = (tmp_16_fu_902_p2 & grp_fu_164_p2);

assign tmp_19_i9_fu_1267_p1 = index_V_3_fu_1257_p4;

assign tmp_19_i_fu_1005_p1 = index_V_1_fu_995_p4;

assign tmp_1_fu_253_p4 = {{x_to_int_fu_250_p1[30:23]}};

assign tmp_20_fu_337_p4 = {{tmp_9_to_int_fu_333_p1[62:52]}};

assign tmp_21_fu_886_p1 = x_assign_1_to_int_fu_872_p1[22:0];

assign tmp_21_i1_fu_1349_p2 = (mask_table3_q0 ^ 52'd4503599627370495);

assign tmp_21_i_fu_1090_p2 = (mask_table3_q0 ^ 52'd4503599627370495);

assign tmp_22_i1_fu_710_p2 = ((loc_V_15_reg_1565 == 52'd0) ? 1'b1 : 1'b0);

assign tmp_23_fu_347_p1 = tmp_9_to_int_fu_333_p1[51:0];

assign tmp_23_i1_fu_715_p2 = ((loc_V_14_reg_1557 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_23_i_fu_446_p2 = ((loc_V_10_reg_1495 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_24_fu_393_p2 = (notrhs4_fu_387_p2 | notlhs4_fu_381_p2);

assign tmp_24_i1_fu_691_p1 = index_V_2_fu_681_p4;

assign tmp_24_i_fu_424_p1 = index_V_fu_414_p4;

assign tmp_25_fu_399_p2 = (notrhs5_reg_1479 | notlhs5_reg_1474);

assign tmp_26_fu_403_p2 = (tmp_24_fu_393_p2 & tmp_25_fu_399_p2);

assign tmp_26_i1_fu_793_p2 = (mask_table1_q0 ^ 52'd4503599627370495);

assign tmp_26_i_fu_531_p2 = (mask_table1_q0 ^ 52'd4503599627370495);

assign tmp_28_fu_409_p2 = (tmp_26_fu_403_p2 & tmp_27_reg_1484);

assign tmp_2_demorgan_fu_244_p2 = (tmp_i_i_i_i_fu_232_p2 & tmp_i_i_i_i_17_fu_238_p2);

assign tmp_2_fu_321_p2 = (notrhs2_fu_315_p2 | notlhs2_fu_309_p2);

assign tmp_30_fu_918_p4 = {{tmp_7_to_int_fu_914_p1[62:52]}};

assign tmp_31_fu_928_p1 = tmp_7_to_int_fu_914_p1[51:0];

assign tmp_32_fu_974_p2 = (notrhs6_fu_968_p2 | notlhs6_fu_962_p2);

assign tmp_33_fu_980_p2 = (notrhs7_reg_1605 | notlhs7_reg_1600);

assign tmp_34_fu_984_p2 = (tmp_32_fu_974_p2 & tmp_33_fu_980_p2);

assign tmp_36_fu_990_p2 = (tmp_34_fu_984_p2 & tmp_35_reg_1610);

assign tmp_37_fu_612_p4 = {{r_to_int_fu_609_p1[30:23]}};

assign tmp_38_fu_472_p1 = p_Val2_3_reg_1489[62:0];

assign tmp_39_fu_638_p2 = (notrhs8_fu_632_p2 | notlhs8_fu_626_p2);

assign tmp_3_fu_279_p2 = (notrhs_fu_273_p2 | notlhs_fu_267_p2);

assign tmp_40_fu_644_p2 = (tmp_39_fu_638_p2 & tmp_2_reg_1465);

assign tmp_42_fu_649_p2 = (tmp_40_fu_644_p2 & grp_fu_164_p2);

assign tmp_44_fu_1188_p4 = {{r_1_to_int_fu_1185_p1[30:23]}};

assign tmp_45_fu_1214_p2 = (notrhs1_fu_1208_p2 | notlhs1_fu_1202_p2);

assign tmp_46_fu_622_p1 = r_to_int_fu_609_p1[22:0];

assign tmp_47_fu_1220_p2 = (tmp_45_fu_1214_p2 & tmp_16_reg_1591);

assign tmp_49_fu_1225_p2 = (tmp_47_fu_1220_p2 & grp_fu_164_p2);

assign tmp_54_fu_1031_p1 = p_Val2_12_reg_1615[62:0];

assign tmp_58_fu_1198_p1 = r_1_to_int_fu_1185_p1[22:0];

assign tmp_5_fu_285_p2 = (tmp_3_fu_279_p2 & grp_fu_164_p2);

assign tmp_61_fu_696_p1 = p_Val2_23_fu_655_p1[62:0];

assign tmp_66_fu_1272_p1 = p_Val2_32_fu_1231_p1[62:0];

assign tmp_7_to_int_fu_914_p1 = reg_204;

assign tmp_8_fu_295_p4 = {{x_assign_to_int_fu_291_p1[30:23]}};

assign tmp_9_to_int_fu_333_p1 = reg_204;

assign tmp_fu_1167_p2 = (p_Result_25_reg_1644 & sel_tmp8_i_fu_1163_p2);

assign tmp_i1_19_fu_441_p2 = ((loc_V_10_reg_1495 > 11'd1075) ? 1'b1 : 1'b0);

assign tmp_i1_fu_436_p2 = ((loc_V_10_reg_1495 < 11'd1023) ? 1'b1 : 1'b0);

assign tmp_i2_20_fu_705_p2 = ((loc_V_14_reg_1557 > 11'd1075) ? 1'b1 : 1'b0);

assign tmp_i2_fu_700_p2 = ((loc_V_14_reg_1557 < 11'd1023) ? 1'b1 : 1'b0);

assign tmp_i5_fu_1276_p2 = ((loc_V_6_reg_1698 < 11'd1023) ? 1'b1 : 1'b0);

assign tmp_i6_fu_1281_p2 = ((loc_V_6_reg_1698 > 11'd1075) ? 1'b1 : 1'b0);

assign tmp_i_18_fu_1022_p2 = ((loc_V_2_reg_1621 > 11'd1075) ? 1'b1 : 1'b0);

assign tmp_i_fu_1017_p2 = ((loc_V_2_reg_1621 < 11'd1023) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i_17_fu_238_p2 = ((loc_V_1_fu_228_p1 != 52'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i_fu_232_p2 = ((loc_V_fu_218_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign x_assign_1_to_int_fu_872_p1 = reg_197;

assign x_assign_to_int_fu_291_p1 = reg_197;

assign x_to_int_fu_250_p1 = x;

assign xs_exp_V_10_fu_1070_p3 = ((p_Result_25_fu_1010_p3[0:0] === 1'b1) ? loc_V_4_fu_1056_p4 : loc_V_2_reg_1621);

assign xs_exp_V_11_fu_1332_p3 = ((p_Result_59_reg_1689[0:0] === 1'b1) ? loc_V_8_fu_1318_p4 : loc_V_6_reg_1698);

assign xs_exp_V_12_fu_511_p3 = ((p_Result_8_fu_429_p3[0:0] === 1'b1) ? loc_V_10_reg_1495 : loc_V_12_fu_497_p4);

assign xs_exp_V_fu_776_p3 = ((p_Result_42_reg_1548[0:0] === 1'b1) ? loc_V_14_reg_1557 : loc_V_16_fu_762_p4);

assign xs_sig_V_12_fu_1343_p3 = ((p_Result_59_reg_1689[0:0] === 1'b1) ? loc_V_9_fu_1328_p1 : loc_V_7_reg_1706);

assign xs_sig_V_14_fu_1096_p2 = (xs_sig_V_4_fu_1083_p3 & tmp_21_i_fu_1090_p2);

assign xs_sig_V_15_fu_1355_p2 = (xs_sig_V_12_fu_1343_p3 & tmp_21_i1_fu_1349_p2);

assign xs_sig_V_16_fu_537_p2 = (xs_sig_V_1_fu_524_p3 & tmp_26_i_fu_531_p2);

assign xs_sig_V_1_fu_524_p3 = ((p_Result_8_fu_429_p3[0:0] === 1'b1) ? loc_V_11_reg_1503 : loc_V_13_fu_507_p1);

assign xs_sig_V_4_fu_1083_p3 = ((p_Result_25_fu_1010_p3[0:0] === 1'b1) ? loc_V_5_fu_1066_p1 : loc_V_3_reg_1629);

assign xs_sig_V_8_fu_787_p3 = ((p_Result_42_reg_1548[0:0] === 1'b1) ? loc_V_15_reg_1565 : loc_V_17_fu_772_p1);

assign xs_sig_V_fu_799_p2 = (xs_sig_V_8_fu_787_p3 & tmp_26_i1_fu_793_p2);

assign xs_sign_V_13_fu_1077_p2 = (p_Result_25_fu_1010_p3 & p_Result_71_fu_1048_p3);

assign xs_sign_V_14_fu_1338_p2 = (p_Result_59_reg_1689 & p_Result_75_fu_1310_p3);

assign xs_sign_V_15_fu_518_p2 = (p_Result_8_fu_429_p3 | p_Result_79_fu_489_p3);

assign xs_sign_V_fu_782_p2 = (p_Result_42_reg_1548 | p_Result_83_fu_754_p3);

endmodule //roundInt
